{
  "collection": {
    "info": {
      "id": "4b9d8688-0425-9e77-b043-c5348885a06d",
      "name": "Business Profile Features With Limit",
      "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
    },
    "event": [],
    "variable": [],
    "item": [
      {
        "description": {
          "content": "",
          "type": "text/plain"
        },
        "id": "83980377-4f43-4add-86d9-8fe657ed87f9",
        "name": "CB Feature Template",
        "item": [
          {
            "id": "facca270-9bce-4e09-b05e-1c353e30afee",
            "name": "Login",
            "request": {
              "url": "{{env}}/cb/odata/ns/authenticationservice/SecureUsers?action=init",
              "method": "POST",
              "header": [
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Accept",
                  "value": "application/json"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{\r\n\r\n               \"Id\": \"\",\r\n\r\n               \"UserName\": \"primaryadmin\",\r\n\r\n               \"AppType\": \"Business\",\r\n\r\n               \"Password\": \"Pass1234\",\r\n\r\n               \"ChannelType\": \"Web\"\r\n\r\n}"
              },
              "description": {
                "content": "",
                "type": "text/plain"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "tests[\"Logged in as primaryadmin for iteration : \"+environment['featureName']] = responseCode.code === 201;",
                    "postman.setEnvironmentVariable(\"TokenKey\",postman.getResponseHeader('TokenKey'));",
                    "postman.setEnvironmentVariable(\"x-csrf-token\",postman.getResponseHeader('x-csrf-token'));"
                  ]
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "postman.setEnvironmentVariable('featureId',data['f_id']);",
                    "postman.setEnvironmentVariable('featureName',data['name']);"
                  ]
                }
              }
            ]
          },
          {
            "id": "9de3b21f-024a-49cc-9839-e5066d111a15",
            "name": "get ProfileFeatures without assigning feature",
            "request": {
              "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
              "method": "GET",
              "header": [
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "TokenKey",
                  "value": "{{TokenKey}}"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "x-csrf-token",
                  "value": "{{x-csrf-token}}"
                }
              ],
              "body": {
                "mode": "formdata",
                "formdata": []
              },
              "description": {
                "content": "",
                "type": "text/plain"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "var jsonData = JSON.parse(responseBody);",
                    "var res = jsonData.d.results;",
                    "",
                    "var postResponse ={};",
                    "postResponse.ProfileId = \"{{Id}}\";",
                    "postResponse.FeatureId = \"{{featureId}}\";",
                    "",
                    "var jsonRequestBody = JSON.stringify(postResponse);",
                    "postman.setEnvironmentVariable('reqPutOnlyFeature',jsonRequestBody);",
                    "",
                    "tests[\"\"+environment['featureName']+\" get without assigning.\"] = responseCode.code === 200;"
                  ]
                }
              }
            ]
          },
          {
            "id": "98d5151b-ce91-4438-b2c0-bd1ce79e04aa",
            "name": "Add Business Profile Feature without entitlements",
            "request": {
              "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
              "method": "PUT",
              "header": [
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "x-csrf-token",
                  "value": "{{x-csrf-token}}"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "TokenKey",
                  "value": "{{TokenKey}}"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{{reqPutOnlyFeature}}"
              },
              "description": {
                "content": "",
                "type": "text/plain"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "//var jsonData = JSON.parse(responseBody);",
                    "//postman.setEnvironmentVariable(\"featureId\", jsonData.d.FeatureId);",
                    "",
                    "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                    "//tests[\"ProfileId and FeatureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === '601';",
                    "tests[\"\"+environment['featureName']+\" added without entitlements.\"] = responseCode.code === 204;"
                  ]
                }
              }
            ]
          },
          {
            "id": "a08bdd26-855e-4cc6-9855-8348d9f58b26",
            "name": "get ProfileFeatures entitlements",
            "request": {
              "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Childrens,Childrens/Properties",
              "method": "GET",
              "header": [
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "x-csrf-token",
                  "value": "{{x-csrf-token}}"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "TokenKey",
                  "value": "{{TokenKey}}"
                }
              ],
              "body": {
                "mode": "formdata",
                "formdata": []
              },
              "description": {
                "content": "",
                "type": "text/plain"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "var jsonData = JSON.parse(responseBody);",
                    "var res = jsonData.d.results;",
                    "",
                    "var postResponse ={};",
                    "postResponse.ProfileId = \"{{Id}}\";",
                    "postResponse.FeatureId = \"{{featureId}}\";",
                    "",
                    "var postResponseChannel ={};",
                    "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                    "postResponseChannel.FeatureId = \"{{featureId}}\";",
                    "",
                    "var entObj = {};",
                    "var featureObj = {};",
                    "var entObjChannel = {};",
                    "var featureObjChannel = {};",
                    "var entitlementsList = [];",
                    "var channelEntitlementsList = [];",
                    "",
                    "for(var i=0;i<res.length;i++)",
                    "{",
                    "    var entitlement = {};",
                    "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                    "    entitlement.Entitled = true;",
                    "    entitlementsList.push(entitlement);",
                    "",
                    "    var channelEntitlement = {};",
                    "    channelEntitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                    "    channelEntitlement.Entitled = false;",
                    "    channelEntitlementsList.push(channelEntitlement);",
                    " ",
                    "    var propArr = res[i].Properties.results;",
                    "    var childArr = res[i].Childrens.results;",
                    "    ",
                    "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                    "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                    "   for(var j=0;j<childArr.length;j++)",
                    "    {",
                    "        var entitlement = {};",
                    "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                    "        entitlement.Entitled = true;",
                    "        entitlementsList.push(entitlement);",
                    "        ",
                    "        var channelEntitlement = {};",
                    "        channelEntitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                    "        channelEntitlement.Entitled = false;",
                    "        channelEntitlementsList.push(channelEntitlement);",
                    "        ",
                    "        var childPropArr = childArr[j].Properties.results;",
                    "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                    "        ",
                    "        //if(childPropArr.length>0)",
                    "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                    "    }",
                    "}",
                    "",
                    "entObj.Entitlements = entitlementsList; ",
                    "",
                    "postResponse.Feature = entObj;",
                    "postResponseChannel.Feature = entObjChannel;",
                    "",
                    "entObjChannel.Entitlements = channelEntitlementsList; ",
                    "",
                    "",
                    "var jsonRequestBodyCross = JSON.stringify(postResponse);",
                    "postman.setEnvironmentVariable('newReq',jsonRequestBodyCross);",
                    "",
                    "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                    "postman.setEnvironmentVariable('newReqChannel',jsonRequestBodyChannel);",
                    "",
                    "tests[\"status code is 200 : OK for \"+environment['featureName']] = responseCode.code === 200;"
                  ]
                }
              }
            ]
          },
          {
            "id": "14162a48-9ac6-4b33-a5d3-ad43a28f7124",
            "name": "delete feature",
            "request": {
              "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
              "method": "DELETE",
              "header": [
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "x-csrf-token",
                  "value": "{{x-csrf-token}}"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "TokenKey",
                  "value": "{{TokenKey}}"
                }
              ],
              "body": {
                "mode": "formdata",
                "formdata": []
              },
              "description": {
                "content": "",
                "type": "text/plain"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "tests[\"\"+environment['featureName']+\" deleted.\"] = responseCode.code === 204;",
                    ""
                  ]
                }
              }
            ]
          },
          {
            "id": "26012c65-7033-47ac-ac7e-2ec7bc52f771",
            "name": "Add Business Profile Features with entitlements (Valid Set)",
            "request": {
              "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
              "method": "PUT",
              "header": [
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "x-csrf-token",
                  "value": "{{x-csrf-token}}"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "TokenKey",
                  "value": "{{TokenKey}}"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{{newReq}}"
              },
              "description": {
                "content": "",
                "type": "text/plain"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "//var jsonData = JSON.parse(responseBody);",
                    "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                    "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                    "",
                    "tests[\"\"+environment['featureName']+\" added with entitlements entitled true.\"] = responseCode.code === 204;"
                  ]
                }
              }
            ]
          },
          {
            "id": "cd9bd5df-8eab-4579-aa7c-daf209871195",
            "name": "get ProfileFeatures with children and limits",
            "request": {
              "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
              "method": "GET",
              "header": [
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "x-csrf-token",
                  "value": "{{x-csrf-token}}"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "TokenKey",
                  "value": "{{TokenKey}}"
                }
              ],
              "body": {
                "mode": "formdata",
                "formdata": []
              },
              "description": {
                "content": "",
                "type": "text/plain"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "var jsonData = JSON.parse(responseBody);",
                    "var res = jsonData.d.results;",
                    "",
                    "var postResponse ={};",
                    "postResponse.ProfileId = \"{{Id}}\";",
                    "postResponse.FeatureId = \"{{featureId}}\";",
                    "",
                    "var postResponseChannel ={};",
                    "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                    "postResponseChannel.FeatureId = \"{{featureId}}\";",
                    "",
                    "var entObj = {};",
                    "var featureObj = {};",
                    "var entitlementsList = [];",
                    "var entObjChannel = {};",
                    "var featureObjChannel = {};",
                    "var entitlementsListChannel = [];",
                    "",
                    "var limitValue = 1600;",
                    "var limitList = [];",
                    "var limitListChannel = [];",
                    "var periodType = [\"Per Month\",\"Per Week\",\"Per Day\",\"Per Transaction\"];",
                    "",
                    "for(var i=0;i<4;i++)",
                    "{",
                    "    limitValue = limitValue/2;",
                    "    limitValueChannel = limitValue/2;",
                    "    var limitObj = {};",
                    "    limitObj.Period=periodType[i];",
                    "    limitObj.Amount=limitValue.toString()+\".00\";",
                    "    limitObj.ExceedWithApproval=true;",
                    "    limitList.push(limitObj);",
                    "    ",
                    "    var limitObjChannel = {};",
                    "    limitObjChannel.Period=periodType[i];",
                    "    limitObjChannel.Amount=limitValueChannel.toString()+\".00\";",
                    "    limitObjChannel.ExceedWithApproval=true;",
                    "    limitListChannel.push(limitObjChannel);",
                    "}",
                    "",
                    "for(var i=0;i<res.length;i++)",
                    "{",
                    "    var entitlement = {};",
                    "    var limitArr = res[i].Limits.results;",
                    "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                    "    entitlement.Entitled = true;",
                    "    if(limitArr.length>0)",
                    "    {",
                    "        entitlement.Limits=limitList;",
                    "    }",
                    "    entitlementsList.push(entitlement);",
                    "    ",
                    "    var entitlementChannel = {};",
                    "    entitlementChannel.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                    "    entitlementChannel.Entitled = true;",
                    "    if(limitArr.length>0)",
                    "    {",
                    "        entitlementChannel.Limits=limitListChannel;",
                    "    }",
                    "    entitlementsListChannel.push(entitlementChannel);",
                    "    ",
                    "    var propArr = res[i].Properties.results;",
                    "    var childArr = res[i].Childrens.results;",
                    "    ",
                    "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                    "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                    "   for(var j=0;j<childArr.length;j++)",
                    "    {",
                    "        var entitlement = {};",
                    "        var childlimitArr = childArr[j].Limits.results;",
                    "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                    "        entitlement.Entitled = true;",
                    "        if(childlimitArr.length>0)",
                    "        {",
                    "            entitlement.Limits=limitList;",
                    "        }",
                    "        entitlementsList.push(entitlement);",
                    "        ",
                    "        var entitlementChannel = {};",
                    "        var childlimitArr = childArr[j].Limits.results;",
                    "        entitlementChannel.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                    "        entitlementChannel.Entitled = true;",
                    "        if(childlimitArr.length>0)",
                    "        {",
                    "            entitlementChannel.Limits=limitListChannel;",
                    "        }",
                    "        entitlementsListChannel.push(entitlementChannel);",
                    "        ",
                    "        ",
                    "        var childPropArr = childArr[j].Properties.results;",
                    "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                    "        ",
                    "        //if(childPropArr.length>0)",
                    "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                    "    }",
                    "}",
                    "",
                    "entObj.Entitlements = entitlementsList; ",
                    "postResponse.Feature = entObj;",
                    "",
                    "var jsonRequestBody = JSON.stringify(postResponse);",
                    "postman.setEnvironmentVariable('newReqWithLimit',jsonRequestBody);",
                    "",
                    "entObjChannel.Entitlements = entitlementsListChannel; ",
                    "postResponseChannel.Feature = entObjChannel;",
                    "",
                    "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                    "postman.setEnvironmentVariable('newReqWithLimitChannel',jsonRequestBodyChannel);",
                    "tests[\"\"+environment['featureName']+\" expand limit,properties verified.\"] = responseCode.code === 200;"
                  ]
                }
              }
            ]
          },
          {
            "id": "98f04459-2775-4071-82f1-795c11b47882",
            "name": "Add Business Profile Features with entitlements (Valid Set) copy",
            "request": {
              "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')",
              "method": "PUT",
              "header": [
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "x-csrf-token",
                  "value": "{{x-csrf-token}}"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "TokenKey",
                  "value": "{{TokenKey}}"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{{newReqChannel}}"
              },
              "description": {
                "content": "",
                "type": "text/plain"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "//var jsonData = JSON.parse(responseBody);",
                    "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                    "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                    "",
                    "tests[\"Change entitlements to entitled false on channel for \"+environment['featureName']] = responseCode.code === 204;"
                  ]
                }
              }
            ]
          },
          {
            "id": "825abed4-1099-4b44-8cf5-da9e59e2d1b6",
            "name": "get ProfileFeatures with children entitled false on channel Verify",
            "request": {
              "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
              "method": "GET",
              "header": [
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "x-csrf-token",
                  "value": "{{x-csrf-token}}"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "TokenKey",
                  "value": "{{TokenKey}}"
                }
              ],
              "body": {
                "mode": "formdata",
                "formdata": []
              },
              "description": {
                "content": "",
                "type": "text/plain"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "var jsonData = JSON.parse(responseBody);",
                    "var res = jsonData.d.results;",
                    "",
                    "for(var i=0;i<res.length;i++)",
                    "{",
                    "    var propArr = res[i].Properties.results;",
                    "    var childArr = res[i].Childrens.results;",
                    "    ",
                    "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                    "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                    "   for(var j=0;j<childArr.length;j++)",
                    "    {",
                    "        var childPropArr = childArr[j].Properties.results;",
                    "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                    "        ",
                    "        //if(childPropArr.length>0)",
                    "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                    "    }",
                    "}",
                    "tests[\"Entitlements checked (false) on channel for \"+environment['featureName']] = responseCode.code === 200;"
                  ]
                }
              }
            ]
          },
          {
            "id": "7977a171-5d7d-4234-b83e-2ad5d14b19da",
            "name": "Add Business Profile Features with entitlements with limits",
            "request": {
              "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
              "method": "PUT",
              "header": [
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "x-csrf-token",
                  "value": "{{x-csrf-token}}"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "TokenKey",
                  "value": "{{TokenKey}}"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{{newReqWithLimit}}"
              },
              "description": {
                "content": "",
                "type": "text/plain"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "//var jsonData = JSON.parse(responseBody);",
                    "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                    "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                    "",
                    "tests[\"set limits for \"+environment['featureName']] = responseCode.code === 204;"
                  ]
                }
              }
            ]
          },
          {
            "id": "a296d108-e64d-41f4-bdc1-7eb93fd5f8de",
            "name": "get ProfileFeatures with children and limits verify",
            "request": {
              "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
              "method": "GET",
              "header": [
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "x-csrf-token",
                  "value": "{{x-csrf-token}}"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "TokenKey",
                  "value": "{{TokenKey}}"
                }
              ],
              "body": {
                "mode": "formdata",
                "formdata": []
              },
              "description": {
                "content": "",
                "type": "text/plain"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "var jsonData = JSON.parse(responseBody);",
                    "var res = jsonData.d.results;",
                    "var limitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                    "for(var i=0;i<res.length;i++)",
                    "{",
                    "    var propArr = res[i].Properties.results;",
                    "    var childArr = res[i].Childrens.results;",
                    "    var parentLimit = res[i].Limits.results;",
                    "    //if(parentLimit.length>0)",
                    "    {",
                    "        for(var k=0;k<parentLimit.length;k++)",
                    "        {",
                    "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is null\"] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === null;",
                    "        }",
                    "    }",
                    "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                    "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                    "    for(var j=0;j<childArr.length;j++)",
                    "    {",
                    "        var childLimit = childArr[j].Limits.results;",
                    "    //if(childLimit.length>0)",
                    "        {",
                    "        for(var k=0;k<childLimit.length;k++)",
                    "            {",
                    "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is null\"] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === null;",
                    "            }",
                    "        }",
                    "        var childPropArr = childArr[j].Properties.results;",
                    "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                    "        //if(childPropArr.length>0)",
                    "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                    "    }",
                    "}",
                    "tests[\"check entitlements with limit for \"+environment['featureName']] = responseCode.code === 200;"
                  ]
                }
              }
            ]
          },
          {
            "id": "f453248f-5025-43a1-9f38-90d5ce5460d8",
            "name": "Add Business Profile Features with entitlements with limits on Channel",
            "request": {
              "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
              "method": "PUT",
              "header": [
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "x-csrf-token",
                  "value": "{{x-csrf-token}}"
                }
              ],
              "body": {
                "mode": "raw",
                "raw": "{{newReqWithLimitChannel}}"
              },
              "description": {
                "content": "",
                "type": "text/plain"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "//var jsonData = JSON.parse(responseBody);",
                    "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                    "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                    "",
                    "tests[\"set limits on channel for \"+environment['featureName']] = responseCode.code === 204;"
                  ]
                }
              }
            ]
          },
          {
            "id": "3d26e719-2cc3-4634-a785-7214bcd9a7e2",
            "name": "get ProfileFeatures with children and limits verify on channel",
            "request": {
              "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
              "method": "GET",
              "header": [
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "x-csrf-token",
                  "value": "{{x-csrf-token}}"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "TokenKey",
                  "value": "{{TokenKey}}"
                }
              ],
              "body": {
                "mode": "formdata",
                "formdata": []
              },
              "description": {
                "content": "",
                "type": "text/plain"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "type": "text/javascript",
                  "exec": [
                    "var jsonData = JSON.parse(responseBody);",
                    "var res = jsonData.d.results;",
                    "var limitArr = [\"50.00\",\"100.00\",\"200.00\",\"400.00\"];",
                    "var maxlimitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                    "for(var i=0;i<res.length;i++)",
                    "{",
                    "    var propArr = res[i].Properties.results;",
                    "    var childArr = res[i].Childrens.results;",
                    "    var parentLimit = res[i].Limits.results;",
                    "    //if(parentLimit.length>0)",
                    "    {",
                    "        for(var k=0;k<parentLimit.length;k++)",
                    "        {",
                    "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is : \"+maxlimitArr[k]] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === maxlimitArr[k];",
                    "        }",
                    "    }",
                    "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                    "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                    "    for(var j=0;j<childArr.length;j++)",
                    "    {",
                    "        var childLimit = childArr[j].Limits.results;",
                    "    //if(childLimit.length>0)",
                    "        {",
                    "        for(var k=0;k<childLimit.length;k++)",
                    "            {",
                    "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is :\"+maxlimitArr[k]] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === maxlimitArr[k];",
                    "            }",
                    "        }",
                    "        var childPropArr = childArr[j].Properties.results;",
                    "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                    "        //if(childPropArr.length>0)",
                    "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                    "    }",
                    "}",
                    "tests[\"check entitlements with limit on channel for \"+environment['featureName']] = responseCode.code === 200;"
                  ]
                }
              }
            ]
          }
        ],
        "event": []
      }
    ]
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2016-11-25T07:14:22.444Z",
      "postman_exported_using": "Newman/3.2.0"
    },
    "id": "a481bb2c-55f3-60ae-abea-cb58e17b0cc5",
    "name": "RetailBanking",
    "values": [
      {
        "type": "any",
        "value": "https://10.96.25.141:9445",
        "key": "env"
      },
      {
        "type": "any",
        "value": "RkZJSEFTSGFkSnlZdCszS0V2RkE4QnB5SHRsWXBhRytldmdaM0hGakRpZnlBQXZIZFE9",
        "key": "TokenKey"
      },
      {
        "type": "any",
        "value": "6994246455573289603",
        "key": "x-csrf-token"
      },
      {
        "type": "any",
        "value": "101",
        "key": "featureId"
      },
      {
        "type": "any",
        "value": "Account Management",
        "key": "featureName"
      }
    ]
  },
  "globals": {
    "id": "1182db71-2103-4169-9cb0-44260123ac50",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 13,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 14,
        "pending": 0,
        "failed": 6
      },
      "prerequests": {
        "total": 13,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 13,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 13,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 7,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 13,
        "pending": 0,
        "failed": 6
      },
      "prerequestScripts": {
        "total": 1,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 676.5384615384615,
      "started": 1480058064321,
      "completed": 1480058095059
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 13,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2bec2272-69ba-4f9b-b87f-a3e6e4ede05c"
        },
        "item": {
          "id": "facca270-9bce-4e09-b05e-1c353e30afee",
          "name": "Login",
          "request": {
            "url": "{{env}}/cb/odata/ns/authenticationservice/SecureUsers?action=init",
            "method": "POST",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n\r\n               \"Id\": \"\",\r\n\r\n               \"UserName\": \"primaryadmin\",\r\n\r\n               \"AppType\": \"Business\",\r\n\r\n               \"Password\": \"Pass1234\",\r\n\r\n               \"ChannelType\": \"Web\"\r\n\r\n}"
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"Logged in as primaryadmin for iteration : \"+environment['featureName']] = responseCode.code === 201;",
                  "postman.setEnvironmentVariable(\"TokenKey\",postman.getResponseHeader('TokenKey'));",
                  "postman.setEnvironmentVariable(\"x-csrf-token\",postman.getResponseHeader('x-csrf-token'));"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "postman.setEnvironmentVariable('featureId',data['f_id']);",
                  "postman.setEnvironmentVariable('featureName',data['name']);"
                ]
              }
            }
          ]
        },
        "request": {
          "url": "https://10.96.25.141:9445/cb/odata/ns/authenticationservice/SecureUsers?action=init",
          "method": "POST",
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/3.0.2"
            },
            {
              "key": "Host",
              "value": "10.96.25.141:9445"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            },
            {
              "key": "content-length",
              "value": 202
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\r\n\r\n               \"Id\": \"\",\r\n\r\n               \"UserName\": \"primaryadmin\",\r\n\r\n               \"AppType\": \"Business\",\r\n\r\n               \"Password\": \"Pass1234\",\r\n\r\n               \"ChannelType\": \"Web\"\r\n\r\n}"
          },
          "description": {
            "content": "",
            "type": "text/plain"
          }
        },
        "response": {
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Servlet/3.1"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "CSRF_TOKEN",
              "value": "6994246455573289603"
            },
            {
              "key": "DataServiceVersion",
              "value": "2.0"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Nov 2016 07:14:26 GMT"
            },
            {
              "key": "Location",
              "value": "https://10.96.25.141:9445/cb/odata/ns/authenticationservice/SecureUsers('AgriTech%20Profile%20Ltd')"
            },
            {
              "key": "TokenKey",
              "value": "RkZJSEFTSGFkSnlZdCszS0V2RkE4QnB5SHRsWXBhRytldmdaM0hGakRpZnlBQXZIZFE9"
            },
            {
              "key": "x-csrf-token",
              "value": "6994246455573289603"
            },
            {
              "key": "Content-Length",
              "value": "1321"
            },
            {
              "key": "",
              "value": ""
            },
            {
              "key": "Expires",
              "value": "Thu, 01 Dec 1994 16:00:00 GMT"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache=\"set-cookie, set-cookie2\""
            }
          ],
          "body": "{\"d\":{\"__metadata\":{\"id\":\"https://10.96.25.141:9445/cb/odata/ns/authenticationservice/SecureUsers('AgriTech%20Profile%20Ltd')\",\"uri\":\"https://10.96.25.141:9445/cb/odata/ns/authenticationservice/SecureUsers('AgriTech%20Profile%20Ltd')\",\"type\":\"com.sap.banking.common.endpoint.v1_0.beans.SecureUser\"},\"AffiliateID\":\"4\",\"AppType\":\"Business\",\"BankID\":\"1000\",\"BaseCurrency\":\"USD\",\"BusinessCIF\":\"1234567891\",\"BusinessCustId\":\"AgriTech Profile Ltd\",\"BusinessID\":140,\"BusinessName\":\"AgriTech Profile Ltd\",\"ChannelType\":\"Web\",\"CurrentMfaType\":\"1\",\"EntitlementID\":1103,\"Id\":\"AgriTech Profile Ltd\",\"NeedToAcceptTerms\":false,\"CarrierTermsAccepted\":true,\"Password\":\"\",\"UserProfileID\":\"141\",\"ProfileID\":0,\"SmallBusinessUser\":false,\"UserLocale\":{\"__metadata\":{\"type\":\"com.sap.banking.common.endpoint.v1_0.beans.UserLocale\"},\"Country\":\"US\",\"DateFormat\":\"MM/dd/yyyy\",\"DateFormatName\":\"MM/dd/yyyy\",\"DateTimeFormat\":\"MM/dd/yyyy/H:mm\",\"DateTimeFormatName\":\"MM/dd/yyyy/H:mm\",\"Language\":\"en\",\"Locale\":\"en_US\",\"LocaleName\":null,\"TimeFormat\":\"H:mm\",\"TimeFormatName\":\"H:mm\",\"ZoneFormat\":\"z\",\"ZoneFormatName\":null},\"UserName\":\"primaryadmin\",\"UserType\":1,\"BPWFIID\":\"1000\",\"DeviceId\":null,\"MultifactorInfo\":{\"__deferred\":{\"uri\":\"https://10.96.25.141:9445/cb/odata/ns/authenticationservice/SecureUsers('AgriTech%20Profile%20Ltd')/MultifactorInfo\"}}}}",
          "cookie": [],
          "responseTime": 1042,
          "responseSize": 1321,
          "update": {},
          "reason": {},
          "text": {},
          "json": {},
          "mime": {},
          "dataURI": {},
          "size": {},
          "describe": {},
          "toObjectResolved": {},
          "toJSON": {},
          "meta": {}
        },
        "id": "facca270-9bce-4e09-b05e-1c353e30afee",
        "assertions": [
          {
            "assertion": "Logged in as primaryadmin for iteration : Account Management"
          }
        ]
      },
      {
        "cursor": {
          "ref": "f3fefd7b-07a1-4b3c-9739-7adc8f8004e1",
          "length": 13,
          "cycles": 1,
          "position": 1,
          "iteration": 0
        },
        "item": {
          "id": "9de3b21f-024a-49cc-9839-e5066d111a15",
          "name": "get ProfileFeatures without assigning feature",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
            "method": "GET",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "TokenKey",
                "value": "{{TokenKey}}"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var res = jsonData.d.results;",
                  "",
                  "var postResponse ={};",
                  "postResponse.ProfileId = \"{{Id}}\";",
                  "postResponse.FeatureId = \"{{featureId}}\";",
                  "",
                  "var jsonRequestBody = JSON.stringify(postResponse);",
                  "postman.setEnvironmentVariable('reqPutOnlyFeature',jsonRequestBody);",
                  "",
                  "tests[\"\"+environment['featureName']+\" get without assigning.\"] = responseCode.code === 200;"
                ]
              }
            }
          ]
        },
        "request": {
          "url": "https://10.96.25.141:9445/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='101')",
          "method": "GET",
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Accept",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "TokenKey",
              "value": "RkZJSEFTSGFkSnlZdCszS0V2RkE4QnB5SHRsWXBhRytldmdaM0hGakRpZnlBQXZIZFE9"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "x-csrf-token",
              "value": "6994246455573289603"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/3.0.2"
            },
            {
              "key": "Host",
              "value": "10.96.25.141:9445"
            },
            {
              "key": "cookie",
              "value": "JSESSIONID=0000Is68aquOxo1H-PJ4hZ8CIsl:30a58cb4-c233-4968-b4ea-0c9d0cee7bbe"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "body": {
            "mode": "formdata",
            "formdata": []
          },
          "description": {
            "content": "",
            "type": "text/plain"
          }
        },
        "response": {
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Servlet/3.1"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceVersion",
              "value": "1.0"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Nov 2016 07:14:26 GMT"
            },
            {
              "key": "Content-Length",
              "value": "60"
            },
            {
              "key": "Connection",
              "value": "Close"
            }
          ],
          "body": "{\"error\":{\"code\":\"OE\",\"message\":{\"lang\":\"en\",\"value\":null}}}",
          "cookie": [],
          "responseTime": 230,
          "responseSize": 60,
          "update": {},
          "reason": {},
          "text": {},
          "json": {},
          "mime": {},
          "dataURI": {},
          "size": {},
          "describe": {},
          "toObjectResolved": {},
          "toJSON": {},
          "meta": {}
        },
        "id": "9de3b21f-024a-49cc-9839-e5066d111a15",
        "testScript": [
          {
            "error": {
              "name": "TypeError",
              "message": "Cannot read property 'results' of undefined",
              "stack": "TypeError: Cannot read property 'results' of undefined\n    at Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34), <anonymous>:4:21)\n    at evalmachine.<anonymous>:293:23\n    at evalmachine.<anonymous>:299:2\n    at Object.exports.runInContext (vm.js:44:17)\n    at _.extend._run (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:156:16)\n    at _.extend.execute (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:121:14)\n    at PostmanCollectionRun.<anonymous> (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js:179:27)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1144:13\n    at replenish (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1018:21)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1022:13",
              "checksum": "e88f12520d5aec786d78913275b6ebdb",
              "id": "6abef93a-35d5-45a9-b251-c8caa399f09d",
              "timestamp": 1480058066847,
              "stacktrace": [
                {
                  "fileName": "<anonymous>",
                  "lineNumber": 4,
                  "functionName": "Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
                  "typeName": "Object",
                  "methodName": "eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
                  "columnNumber": 21,
                  "native": false
                },
                {
                  "fileName": "evalmachine.<anonymous>",
                  "lineNumber": 293,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 23,
                  "native": false
                },
                {
                  "fileName": "evalmachine.<anonymous>",
                  "lineNumber": 299,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 2,
                  "native": false
                },
                {
                  "fileName": "vm.js",
                  "lineNumber": 44,
                  "functionName": "Object.exports.runInContext",
                  "typeName": "Object",
                  "methodName": "exports.runInContext",
                  "columnNumber": 17,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
                  "lineNumber": 156,
                  "functionName": "_.extend._run",
                  "typeName": "_",
                  "methodName": "extend._run",
                  "columnNumber": 16,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
                  "lineNumber": 121,
                  "functionName": "_.extend.execute",
                  "typeName": "_",
                  "methodName": "extend.execute",
                  "columnNumber": 14,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js",
                  "lineNumber": 179,
                  "functionName": "",
                  "typeName": "PostmanCollectionRun",
                  "methodName": null,
                  "columnNumber": 27,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
                  "lineNumber": 1144,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 13,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
                  "lineNumber": 1018,
                  "functionName": "replenish",
                  "typeName": "Object",
                  "methodName": null,
                  "columnNumber": 21,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
                  "lineNumber": 1022,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 13,
                  "native": false
                }
              ]
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "bf7406ec-8164-47c2-bff8-f9f06df5c788",
          "length": 13,
          "cycles": 1,
          "position": 2,
          "iteration": 0
        },
        "item": {
          "id": "98d5151b-ce91-4438-b2c0-bd1ce79e04aa",
          "name": "Add Business Profile Feature without entitlements",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
            "method": "PUT",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "TokenKey",
                "value": "{{TokenKey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{{reqPutOnlyFeature}}"
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//var jsonData = JSON.parse(responseBody);",
                  "//postman.setEnvironmentVariable(\"featureId\", jsonData.d.FeatureId);",
                  "",
                  "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                  "//tests[\"ProfileId and FeatureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === '601';",
                  "tests[\"\"+environment['featureName']+\" added without entitlements.\"] = responseCode.code === 204;"
                ]
              }
            }
          ]
        },
        "request": {
          "url": "https://10.96.25.141:9445/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='101')",
          "method": "PUT",
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Accept",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "x-csrf-token",
              "value": "6994246455573289603"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "TokenKey",
              "value": "RkZJSEFTSGFkSnlZdCszS0V2RkE4QnB5SHRsWXBhRytldmdaM0hGakRpZnlBQXZIZFE9"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/3.0.2"
            },
            {
              "key": "Host",
              "value": "10.96.25.141:9445"
            },
            {
              "key": "cookie",
              "value": "JSESSIONID=0000Is68aquOxo1H-PJ4hZ8CIsl:30a58cb4-c233-4968-b4ea-0c9d0cee7bbe"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            },
            {
              "key": "content-length",
              "value": 21
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{{reqPutOnlyFeature}}"
          },
          "description": {
            "content": "",
            "type": "text/plain"
          }
        },
        "response": {
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Servlet/3.1"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceVersion",
              "value": "1.0"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Nov 2016 07:14:27 GMT"
            },
            {
              "key": "Content-Length",
              "value": "114"
            },
            {
              "key": "Connection",
              "value": "Close"
            }
          ],
          "body": "{\"error\":{\"code\":\"OVE\",\"message\":{\"lang\":\"en\",\"value\":\"An exception of type 'MalformedJsonException' occurred.\"}}}",
          "cookie": [],
          "responseTime": 564,
          "responseSize": 114,
          "update": {},
          "reason": {},
          "text": {},
          "json": {},
          "mime": {},
          "dataURI": {},
          "size": {},
          "describe": {},
          "toObjectResolved": {},
          "toJSON": {},
          "meta": {}
        },
        "id": "98d5151b-ce91-4438-b2c0-bd1ce79e04aa",
        "assertions": [
          {
            "assertion": "Account Management added without entitlements.",
            "error": {
              "name": "AssertionFailure",
              "index": 0,
              "message": "Account Management added without entitlements.",
              "stack": "AssertionFailure: Expected tests[\"Account Management added without entitlements.\"] to be truth-like\n   at Object.eval test.js:1:3)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "a89294bd-7c5d-4c4f-bf47-6424633729b6",
          "length": 13,
          "cycles": 1,
          "position": 3,
          "iteration": 0
        },
        "item": {
          "id": "a08bdd26-855e-4cc6-9855-8348d9f58b26",
          "name": "get ProfileFeatures entitlements",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Childrens,Childrens/Properties",
            "method": "GET",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "TokenKey",
                "value": "{{TokenKey}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var res = jsonData.d.results;",
                  "",
                  "var postResponse ={};",
                  "postResponse.ProfileId = \"{{Id}}\";",
                  "postResponse.FeatureId = \"{{featureId}}\";",
                  "",
                  "var postResponseChannel ={};",
                  "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                  "postResponseChannel.FeatureId = \"{{featureId}}\";",
                  "",
                  "var entObj = {};",
                  "var featureObj = {};",
                  "var entObjChannel = {};",
                  "var featureObjChannel = {};",
                  "var entitlementsList = [];",
                  "var channelEntitlementsList = [];",
                  "",
                  "for(var i=0;i<res.length;i++)",
                  "{",
                  "    var entitlement = {};",
                  "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                  "    entitlement.Entitled = true;",
                  "    entitlementsList.push(entitlement);",
                  "",
                  "    var channelEntitlement = {};",
                  "    channelEntitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                  "    channelEntitlement.Entitled = false;",
                  "    channelEntitlementsList.push(channelEntitlement);",
                  " ",
                  "    var propArr = res[i].Properties.results;",
                  "    var childArr = res[i].Childrens.results;",
                  "    ",
                  "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                  "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                  "   for(var j=0;j<childArr.length;j++)",
                  "    {",
                  "        var entitlement = {};",
                  "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                  "        entitlement.Entitled = true;",
                  "        entitlementsList.push(entitlement);",
                  "        ",
                  "        var channelEntitlement = {};",
                  "        channelEntitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                  "        channelEntitlement.Entitled = false;",
                  "        channelEntitlementsList.push(channelEntitlement);",
                  "        ",
                  "        var childPropArr = childArr[j].Properties.results;",
                  "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                  "        ",
                  "        //if(childPropArr.length>0)",
                  "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                  "    }",
                  "}",
                  "",
                  "entObj.Entitlements = entitlementsList; ",
                  "",
                  "postResponse.Feature = entObj;",
                  "postResponseChannel.Feature = entObjChannel;",
                  "",
                  "entObjChannel.Entitlements = channelEntitlementsList; ",
                  "",
                  "",
                  "var jsonRequestBodyCross = JSON.stringify(postResponse);",
                  "postman.setEnvironmentVariable('newReq',jsonRequestBodyCross);",
                  "",
                  "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                  "postman.setEnvironmentVariable('newReqChannel',jsonRequestBodyChannel);",
                  "",
                  "tests[\"status code is 200 : OK for \"+environment['featureName']] = responseCode.code === 200;"
                ]
              }
            }
          ]
        },
        "request": {
          "url": "https://10.96.25.141:9445/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='101')/Feature/Entitlements?$expand=Properties,Childrens,Childrens/Properties",
          "method": "GET",
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Accept",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "x-csrf-token",
              "value": "6994246455573289603"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "TokenKey",
              "value": "RkZJSEFTSGFkSnlZdCszS0V2RkE4QnB5SHRsWXBhRytldmdaM0hGakRpZnlBQXZIZFE9"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/3.0.2"
            },
            {
              "key": "Host",
              "value": "10.96.25.141:9445"
            },
            {
              "key": "cookie",
              "value": "JSESSIONID=0000Is68aquOxo1H-PJ4hZ8CIsl:30a58cb4-c233-4968-b4ea-0c9d0cee7bbe"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "body": {
            "mode": "formdata",
            "formdata": []
          },
          "description": {
            "content": "",
            "type": "text/plain"
          }
        },
        "response": {
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Servlet/3.1"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceVersion",
              "value": "1.0"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Nov 2016 07:14:47 GMT"
            },
            {
              "key": "Content-Length",
              "value": "247"
            },
            {
              "key": "Connection",
              "value": "Close"
            }
          ],
          "body": "{\"error\":{\"code\":\"VE\",\"message\":{\"lang\":\"en\",\"value\":\"{\\\"errorKey\\\":\\\"Error-2_descr\\\",\\\"errorCode\\\":-2,\\\"errorDetails\\\":[{\\\"Desc\\\":\\\"Invalid profile group Id set.\\\",\\\"FieldName\\\":\\\"profileId\\\",\\\"Key\\\":\\\"add.feature.invalid.profile.groupId\\\"}]}\"}}}",
          "cookie": [],
          "responseTime": 600,
          "responseSize": 247,
          "update": {},
          "reason": {},
          "text": {},
          "json": {},
          "mime": {},
          "dataURI": {},
          "size": {},
          "describe": {},
          "toObjectResolved": {},
          "toJSON": {},
          "meta": {}
        },
        "id": "a08bdd26-855e-4cc6-9855-8348d9f58b26",
        "testScript": [
          {
            "error": {
              "name": "TypeError",
              "message": "Cannot read property 'results' of undefined",
              "stack": "TypeError: Cannot read property 'results' of undefined\n    at Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34), <anonymous>:4:21)\n    at evalmachine.<anonymous>:293:23\n    at evalmachine.<anonymous>:299:2\n    at Object.exports.runInContext (vm.js:44:17)\n    at _.extend._run (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:156:16)\n    at _.extend.execute (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:121:14)\n    at PostmanCollectionRun.<anonymous> (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js:179:27)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1144:13\n    at replenish (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1018:21)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1022:13",
              "checksum": "e88f12520d5aec786d78913275b6ebdb",
              "id": "078975ea-f8fe-4cfb-bcca-e03ada057dc2",
              "timestamp": 1480058087408,
              "stacktrace": [
                {
                  "fileName": "<anonymous>",
                  "lineNumber": 4,
                  "functionName": "Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
                  "typeName": "Object",
                  "methodName": "eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
                  "columnNumber": 21,
                  "native": false
                },
                {
                  "fileName": "evalmachine.<anonymous>",
                  "lineNumber": 293,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 23,
                  "native": false
                },
                {
                  "fileName": "evalmachine.<anonymous>",
                  "lineNumber": 299,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 2,
                  "native": false
                },
                {
                  "fileName": "vm.js",
                  "lineNumber": 44,
                  "functionName": "Object.exports.runInContext",
                  "typeName": "Object",
                  "methodName": "exports.runInContext",
                  "columnNumber": 17,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
                  "lineNumber": 156,
                  "functionName": "_.extend._run",
                  "typeName": "_",
                  "methodName": "extend._run",
                  "columnNumber": 16,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
                  "lineNumber": 121,
                  "functionName": "_.extend.execute",
                  "typeName": "_",
                  "methodName": "extend.execute",
                  "columnNumber": 14,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js",
                  "lineNumber": 179,
                  "functionName": "",
                  "typeName": "PostmanCollectionRun",
                  "methodName": null,
                  "columnNumber": 27,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
                  "lineNumber": 1144,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 13,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
                  "lineNumber": 1018,
                  "functionName": "replenish",
                  "typeName": "Object",
                  "methodName": null,
                  "columnNumber": 21,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
                  "lineNumber": 1022,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 13,
                  "native": false
                }
              ]
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "8cf9d198-7cfa-45c8-aac2-66bb3f3b0b4b",
          "length": 13,
          "cycles": 1,
          "position": 4,
          "iteration": 0
        },
        "item": {
          "id": "14162a48-9ac6-4b33-a5d3-ad43a28f7124",
          "name": "delete feature",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
            "method": "DELETE",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "TokenKey",
                "value": "{{TokenKey}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"\"+environment['featureName']+\" deleted.\"] = responseCode.code === 204;",
                  ""
                ]
              }
            }
          ]
        },
        "request": {
          "url": "https://10.96.25.141:9445/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='101')",
          "method": "DELETE",
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "x-csrf-token",
              "value": "6994246455573289603"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "TokenKey",
              "value": "RkZJSEFTSGFkSnlZdCszS0V2RkE4QnB5SHRsWXBhRytldmdaM0hGakRpZnlBQXZIZFE9"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/3.0.2"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "10.96.25.141:9445"
            },
            {
              "key": "cookie",
              "value": "JSESSIONID=0000Is68aquOxo1H-PJ4hZ8CIsl:30a58cb4-c233-4968-b4ea-0c9d0cee7bbe"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            },
            {
              "key": "content-length",
              "value": ""
            }
          ],
          "body": {
            "mode": "formdata",
            "formdata": []
          },
          "description": {
            "content": "",
            "type": "text/plain"
          }
        },
        "response": {
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Servlet/3.1"
            },
            {
              "key": "Content-Type",
              "value": "application/xml"
            },
            {
              "key": "DataServiceVersion",
              "value": "1.0"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Nov 2016 07:14:47 GMT"
            },
            {
              "key": "Content-Length",
              "value": "163"
            },
            {
              "key": "Connection",
              "value": "Close"
            }
          ],
          "body": "<?xml version='1.0' encoding='UTF-8'?><error xmlns=\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\"><code>OE</code><message xml:lang=\"en\"/></error>",
          "cookie": [],
          "responseTime": 572,
          "responseSize": 163,
          "update": {},
          "reason": {},
          "text": {},
          "json": {},
          "mime": {},
          "dataURI": {},
          "size": {},
          "describe": {},
          "toObjectResolved": {},
          "toJSON": {},
          "meta": {}
        },
        "id": "14162a48-9ac6-4b33-a5d3-ad43a28f7124",
        "assertions": [
          {
            "assertion": "Account Management deleted.",
            "error": {
              "name": "AssertionFailure",
              "index": 0,
              "message": "Account Management deleted.",
              "stack": "AssertionFailure: Expected tests[\"Account Management deleted.\"] to be truth-like\n   at Object.eval test.js:1:5)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "75baaabd-4f4b-44a0-977d-7a5dbddefd71",
          "length": 13,
          "cycles": 1,
          "position": 5,
          "iteration": 0
        },
        "item": {
          "id": "26012c65-7033-47ac-ac7e-2ec7bc52f771",
          "name": "Add Business Profile Features with entitlements (Valid Set)",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
            "method": "PUT",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "TokenKey",
                "value": "{{TokenKey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{{newReq}}"
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//var jsonData = JSON.parse(responseBody);",
                  "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                  "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                  "",
                  "tests[\"\"+environment['featureName']+\" added with entitlements entitled true.\"] = responseCode.code === 204;"
                ]
              }
            }
          ]
        },
        "request": {
          "url": "https://10.96.25.141:9445/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='101')",
          "method": "PUT",
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Accept",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "x-csrf-token",
              "value": "6994246455573289603"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "TokenKey",
              "value": "RkZJSEFTSGFkSnlZdCszS0V2RkE4QnB5SHRsWXBhRytldmdaM0hGakRpZnlBQXZIZFE9"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/3.0.2"
            },
            {
              "key": "Host",
              "value": "10.96.25.141:9445"
            },
            {
              "key": "cookie",
              "value": "JSESSIONID=0000Is68aquOxo1H-PJ4hZ8CIsl:30a58cb4-c233-4968-b4ea-0c9d0cee7bbe"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            },
            {
              "key": "content-length",
              "value": 10
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{{newReq}}"
          },
          "description": {
            "content": "",
            "type": "text/plain"
          }
        },
        "response": {
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Servlet/3.1"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceVersion",
              "value": "1.0"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Nov 2016 07:14:49 GMT"
            },
            {
              "key": "Content-Length",
              "value": "114"
            },
            {
              "key": "Connection",
              "value": "Close"
            }
          ],
          "body": "{\"error\":{\"code\":\"OVE\",\"message\":{\"lang\":\"en\",\"value\":\"An exception of type 'MalformedJsonException' occurred.\"}}}",
          "cookie": [],
          "responseTime": 1049,
          "responseSize": 114,
          "update": {},
          "reason": {},
          "text": {},
          "json": {},
          "mime": {},
          "dataURI": {},
          "size": {},
          "describe": {},
          "toObjectResolved": {},
          "toJSON": {},
          "meta": {}
        },
        "id": "26012c65-7033-47ac-ac7e-2ec7bc52f771",
        "assertions": [
          {
            "assertion": "Account Management added with entitlements entitled true.",
            "error": {
              "name": "AssertionFailure",
              "index": 0,
              "message": "Account Management added with entitlements entitled true.",
              "stack": "AssertionFailure: Expected tests[\"Account Management added with entitlements entitled true.\"] to be truth-like\n   at Object.eval test.js:1:6)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "39cfc865-0c6e-4abc-b346-3c1a2fc389ab",
          "length": 13,
          "cycles": 1,
          "position": 6,
          "iteration": 0
        },
        "item": {
          "id": "cd9bd5df-8eab-4579-aa7c-daf209871195",
          "name": "get ProfileFeatures with children and limits",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
            "method": "GET",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "TokenKey",
                "value": "{{TokenKey}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var res = jsonData.d.results;",
                  "",
                  "var postResponse ={};",
                  "postResponse.ProfileId = \"{{Id}}\";",
                  "postResponse.FeatureId = \"{{featureId}}\";",
                  "",
                  "var postResponseChannel ={};",
                  "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                  "postResponseChannel.FeatureId = \"{{featureId}}\";",
                  "",
                  "var entObj = {};",
                  "var featureObj = {};",
                  "var entitlementsList = [];",
                  "var entObjChannel = {};",
                  "var featureObjChannel = {};",
                  "var entitlementsListChannel = [];",
                  "",
                  "var limitValue = 1600;",
                  "var limitList = [];",
                  "var limitListChannel = [];",
                  "var periodType = [\"Per Month\",\"Per Week\",\"Per Day\",\"Per Transaction\"];",
                  "",
                  "for(var i=0;i<4;i++)",
                  "{",
                  "    limitValue = limitValue/2;",
                  "    limitValueChannel = limitValue/2;",
                  "    var limitObj = {};",
                  "    limitObj.Period=periodType[i];",
                  "    limitObj.Amount=limitValue.toString()+\".00\";",
                  "    limitObj.ExceedWithApproval=true;",
                  "    limitList.push(limitObj);",
                  "    ",
                  "    var limitObjChannel = {};",
                  "    limitObjChannel.Period=periodType[i];",
                  "    limitObjChannel.Amount=limitValueChannel.toString()+\".00\";",
                  "    limitObjChannel.ExceedWithApproval=true;",
                  "    limitListChannel.push(limitObjChannel);",
                  "}",
                  "",
                  "for(var i=0;i<res.length;i++)",
                  "{",
                  "    var entitlement = {};",
                  "    var limitArr = res[i].Limits.results;",
                  "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                  "    entitlement.Entitled = true;",
                  "    if(limitArr.length>0)",
                  "    {",
                  "        entitlement.Limits=limitList;",
                  "    }",
                  "    entitlementsList.push(entitlement);",
                  "    ",
                  "    var entitlementChannel = {};",
                  "    entitlementChannel.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                  "    entitlementChannel.Entitled = true;",
                  "    if(limitArr.length>0)",
                  "    {",
                  "        entitlementChannel.Limits=limitListChannel;",
                  "    }",
                  "    entitlementsListChannel.push(entitlementChannel);",
                  "    ",
                  "    var propArr = res[i].Properties.results;",
                  "    var childArr = res[i].Childrens.results;",
                  "    ",
                  "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                  "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                  "   for(var j=0;j<childArr.length;j++)",
                  "    {",
                  "        var entitlement = {};",
                  "        var childlimitArr = childArr[j].Limits.results;",
                  "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                  "        entitlement.Entitled = true;",
                  "        if(childlimitArr.length>0)",
                  "        {",
                  "            entitlement.Limits=limitList;",
                  "        }",
                  "        entitlementsList.push(entitlement);",
                  "        ",
                  "        var entitlementChannel = {};",
                  "        var childlimitArr = childArr[j].Limits.results;",
                  "        entitlementChannel.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                  "        entitlementChannel.Entitled = true;",
                  "        if(childlimitArr.length>0)",
                  "        {",
                  "            entitlementChannel.Limits=limitListChannel;",
                  "        }",
                  "        entitlementsListChannel.push(entitlementChannel);",
                  "        ",
                  "        ",
                  "        var childPropArr = childArr[j].Properties.results;",
                  "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                  "        ",
                  "        //if(childPropArr.length>0)",
                  "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                  "    }",
                  "}",
                  "",
                  "entObj.Entitlements = entitlementsList; ",
                  "postResponse.Feature = entObj;",
                  "",
                  "var jsonRequestBody = JSON.stringify(postResponse);",
                  "postman.setEnvironmentVariable('newReqWithLimit',jsonRequestBody);",
                  "",
                  "entObjChannel.Entitlements = entitlementsListChannel; ",
                  "postResponseChannel.Feature = entObjChannel;",
                  "",
                  "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                  "postman.setEnvironmentVariable('newReqWithLimitChannel',jsonRequestBodyChannel);",
                  "tests[\"\"+environment['featureName']+\" expand limit,properties verified.\"] = responseCode.code === 200;"
                ]
              }
            }
          ]
        },
        "request": {
          "url": "https://10.96.25.141:9445/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='101')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
          "method": "GET",
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Accept",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "x-csrf-token",
              "value": "6994246455573289603"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "TokenKey",
              "value": "RkZJSEFTSGFkSnlZdCszS0V2RkE4QnB5SHRsWXBhRytldmdaM0hGakRpZnlBQXZIZFE9"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/3.0.2"
            },
            {
              "key": "Host",
              "value": "10.96.25.141:9445"
            },
            {
              "key": "cookie",
              "value": "JSESSIONID=0000Is68aquOxo1H-PJ4hZ8CIsl:30a58cb4-c233-4968-b4ea-0c9d0cee7bbe"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "body": {
            "mode": "formdata",
            "formdata": []
          },
          "description": {
            "content": "",
            "type": "text/plain"
          }
        },
        "response": {
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Servlet/3.1"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceVersion",
              "value": "1.0"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Nov 2016 07:14:49 GMT"
            },
            {
              "key": "Content-Length",
              "value": "247"
            },
            {
              "key": "Connection",
              "value": "Close"
            }
          ],
          "body": "{\"error\":{\"code\":\"VE\",\"message\":{\"lang\":\"en\",\"value\":\"{\\\"errorKey\\\":\\\"Error-2_descr\\\",\\\"errorCode\\\":-2,\\\"errorDetails\\\":[{\\\"Desc\\\":\\\"Invalid profile group Id set.\\\",\\\"FieldName\\\":\\\"profileId\\\",\\\"Key\\\":\\\"add.feature.invalid.profile.groupId\\\"}]}\"}}}",
          "cookie": [],
          "responseTime": 591,
          "responseSize": 247,
          "update": {},
          "reason": {},
          "text": {},
          "json": {},
          "mime": {},
          "dataURI": {},
          "size": {},
          "describe": {},
          "toObjectResolved": {},
          "toJSON": {},
          "meta": {}
        },
        "id": "cd9bd5df-8eab-4579-aa7c-daf209871195",
        "testScript": [
          {
            "error": {
              "name": "TypeError",
              "message": "Cannot read property 'results' of undefined",
              "stack": "TypeError: Cannot read property 'results' of undefined\n    at Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34), <anonymous>:4:21)\n    at evalmachine.<anonymous>:293:23\n    at evalmachine.<anonymous>:299:2\n    at Object.exports.runInContext (vm.js:44:17)\n    at _.extend._run (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:156:16)\n    at _.extend.execute (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:121:14)\n    at PostmanCollectionRun.<anonymous> (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js:179:27)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1144:13\n    at replenish (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1018:21)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1022:13",
              "checksum": "e88f12520d5aec786d78913275b6ebdb",
              "id": "99c40a00-357a-4de6-b01f-a0bf7ff8c4db",
              "timestamp": 1480058090001,
              "stacktrace": [
                {
                  "fileName": "<anonymous>",
                  "lineNumber": 4,
                  "functionName": "Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
                  "typeName": "Object",
                  "methodName": "eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
                  "columnNumber": 21,
                  "native": false
                },
                {
                  "fileName": "evalmachine.<anonymous>",
                  "lineNumber": 293,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 23,
                  "native": false
                },
                {
                  "fileName": "evalmachine.<anonymous>",
                  "lineNumber": 299,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 2,
                  "native": false
                },
                {
                  "fileName": "vm.js",
                  "lineNumber": 44,
                  "functionName": "Object.exports.runInContext",
                  "typeName": "Object",
                  "methodName": "exports.runInContext",
                  "columnNumber": 17,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
                  "lineNumber": 156,
                  "functionName": "_.extend._run",
                  "typeName": "_",
                  "methodName": "extend._run",
                  "columnNumber": 16,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
                  "lineNumber": 121,
                  "functionName": "_.extend.execute",
                  "typeName": "_",
                  "methodName": "extend.execute",
                  "columnNumber": 14,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js",
                  "lineNumber": 179,
                  "functionName": "",
                  "typeName": "PostmanCollectionRun",
                  "methodName": null,
                  "columnNumber": 27,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
                  "lineNumber": 1144,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 13,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
                  "lineNumber": 1018,
                  "functionName": "replenish",
                  "typeName": "Object",
                  "methodName": null,
                  "columnNumber": 21,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
                  "lineNumber": 1022,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 13,
                  "native": false
                }
              ]
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "850cdfa7-f5ef-4b7f-bd68-b90116e2e151",
          "length": 13,
          "cycles": 1,
          "position": 7,
          "iteration": 0
        },
        "item": {
          "id": "98f04459-2775-4071-82f1-795c11b47882",
          "name": "Add Business Profile Features with entitlements (Valid Set) copy",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')",
            "method": "PUT",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "TokenKey",
                "value": "{{TokenKey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{{newReqChannel}}"
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//var jsonData = JSON.parse(responseBody);",
                  "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                  "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                  "",
                  "tests[\"Change entitlements to entitled false on channel for \"+environment['featureName']] = responseCode.code === 204;"
                ]
              }
            }
          ]
        },
        "request": {
          "url": "https://10.96.25.141:9445/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='101')",
          "method": "PUT",
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Accept",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "x-csrf-token",
              "value": "6994246455573289603"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "TokenKey",
              "value": "RkZJSEFTSGFkSnlZdCszS0V2RkE4QnB5SHRsWXBhRytldmdaM0hGakRpZnlBQXZIZFE9"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/3.0.2"
            },
            {
              "key": "Host",
              "value": "10.96.25.141:9445"
            },
            {
              "key": "cookie",
              "value": "JSESSIONID=0000Is68aquOxo1H-PJ4hZ8CIsl:30a58cb4-c233-4968-b4ea-0c9d0cee7bbe"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            },
            {
              "key": "content-length",
              "value": 17
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{{newReqChannel}}"
          },
          "description": {
            "content": "",
            "type": "text/plain"
          }
        },
        "response": {
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Servlet/3.1"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceVersion",
              "value": "1.0"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Nov 2016 07:14:50 GMT"
            },
            {
              "key": "Content-Length",
              "value": "114"
            },
            {
              "key": "Connection",
              "value": "Close"
            }
          ],
          "body": "{\"error\":{\"code\":\"OVE\",\"message\":{\"lang\":\"en\",\"value\":\"An exception of type 'MalformedJsonException' occurred.\"}}}",
          "cookie": [],
          "responseTime": 574,
          "responseSize": 114,
          "update": {},
          "reason": {},
          "text": {},
          "json": {},
          "mime": {},
          "dataURI": {},
          "size": {},
          "describe": {},
          "toObjectResolved": {},
          "toJSON": {},
          "meta": {}
        },
        "id": "98f04459-2775-4071-82f1-795c11b47882",
        "assertions": [
          {
            "assertion": "Change entitlements to entitled false on channel for Account Management",
            "error": {
              "name": "AssertionFailure",
              "index": 0,
              "message": "Change entitlements to entitled false on channel for Account Management",
              "stack": "AssertionFailure: Expected tests[\"Change entitlements to entitled false on channel for Account Management\"] to be truth-like\n   at Object.eval test.js:1:8)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "198fb8c9-7204-4880-9a77-9c0d81e09eff",
          "length": 13,
          "cycles": 1,
          "position": 8,
          "iteration": 0
        },
        "item": {
          "id": "825abed4-1099-4b44-8cf5-da9e59e2d1b6",
          "name": "get ProfileFeatures with children entitled false on channel Verify",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
            "method": "GET",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "TokenKey",
                "value": "{{TokenKey}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var res = jsonData.d.results;",
                  "",
                  "for(var i=0;i<res.length;i++)",
                  "{",
                  "    var propArr = res[i].Properties.results;",
                  "    var childArr = res[i].Childrens.results;",
                  "    ",
                  "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                  "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                  "   for(var j=0;j<childArr.length;j++)",
                  "    {",
                  "        var childPropArr = childArr[j].Properties.results;",
                  "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                  "        ",
                  "        //if(childPropArr.length>0)",
                  "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                  "    }",
                  "}",
                  "tests[\"Entitlements checked (false) on channel for \"+environment['featureName']] = responseCode.code === 200;"
                ]
              }
            }
          ]
        },
        "request": {
          "url": "https://10.96.25.141:9445/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='101')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
          "method": "GET",
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Accept",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "x-csrf-token",
              "value": "6994246455573289603"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "TokenKey",
              "value": "RkZJSEFTSGFkSnlZdCszS0V2RkE4QnB5SHRsWXBhRytldmdaM0hGakRpZnlBQXZIZFE9"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/3.0.2"
            },
            {
              "key": "Host",
              "value": "10.96.25.141:9445"
            },
            {
              "key": "cookie",
              "value": "JSESSIONID=0000Is68aquOxo1H-PJ4hZ8CIsl:30a58cb4-c233-4968-b4ea-0c9d0cee7bbe"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "body": {
            "mode": "formdata",
            "formdata": []
          },
          "description": {
            "content": "",
            "type": "text/plain"
          }
        },
        "response": {
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Servlet/3.1"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceVersion",
              "value": "1.0"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Nov 2016 07:14:51 GMT"
            },
            {
              "key": "Content-Length",
              "value": "247"
            },
            {
              "key": "Connection",
              "value": "Close"
            }
          ],
          "body": "{\"error\":{\"code\":\"VE\",\"message\":{\"lang\":\"en\",\"value\":\"{\\\"errorKey\\\":\\\"Error-2_descr\\\",\\\"errorCode\\\":-2,\\\"errorDetails\\\":[{\\\"Desc\\\":\\\"Invalid profile group Id set.\\\",\\\"FieldName\\\":\\\"profileId\\\",\\\"Key\\\":\\\"add.feature.invalid.profile.groupId\\\"}]}\"}}}",
          "cookie": [],
          "responseTime": 603,
          "responseSize": 247,
          "update": {},
          "reason": {},
          "text": {},
          "json": {},
          "mime": {},
          "dataURI": {},
          "size": {},
          "describe": {},
          "toObjectResolved": {},
          "toJSON": {},
          "meta": {}
        },
        "id": "825abed4-1099-4b44-8cf5-da9e59e2d1b6",
        "testScript": [
          {
            "error": {
              "name": "TypeError",
              "message": "Cannot read property 'results' of undefined",
              "stack": "TypeError: Cannot read property 'results' of undefined\n    at Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34), <anonymous>:4:21)\n    at evalmachine.<anonymous>:293:23\n    at evalmachine.<anonymous>:299:2\n    at Object.exports.runInContext (vm.js:44:17)\n    at _.extend._run (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:156:16)\n    at _.extend.execute (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:121:14)\n    at PostmanCollectionRun.<anonymous> (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js:179:27)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1144:13\n    at replenish (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1018:21)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1022:13",
              "checksum": "e88f12520d5aec786d78913275b6ebdb",
              "id": "dca8603e-467d-4153-8311-c6b8fe428881",
              "timestamp": 1480058091529,
              "stacktrace": [
                {
                  "fileName": "<anonymous>",
                  "lineNumber": 4,
                  "functionName": "Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
                  "typeName": "Object",
                  "methodName": "eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
                  "columnNumber": 21,
                  "native": false
                },
                {
                  "fileName": "evalmachine.<anonymous>",
                  "lineNumber": 293,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 23,
                  "native": false
                },
                {
                  "fileName": "evalmachine.<anonymous>",
                  "lineNumber": 299,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 2,
                  "native": false
                },
                {
                  "fileName": "vm.js",
                  "lineNumber": 44,
                  "functionName": "Object.exports.runInContext",
                  "typeName": "Object",
                  "methodName": "exports.runInContext",
                  "columnNumber": 17,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
                  "lineNumber": 156,
                  "functionName": "_.extend._run",
                  "typeName": "_",
                  "methodName": "extend._run",
                  "columnNumber": 16,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
                  "lineNumber": 121,
                  "functionName": "_.extend.execute",
                  "typeName": "_",
                  "methodName": "extend.execute",
                  "columnNumber": 14,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js",
                  "lineNumber": 179,
                  "functionName": "",
                  "typeName": "PostmanCollectionRun",
                  "methodName": null,
                  "columnNumber": 27,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
                  "lineNumber": 1144,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 13,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
                  "lineNumber": 1018,
                  "functionName": "replenish",
                  "typeName": "Object",
                  "methodName": null,
                  "columnNumber": 21,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
                  "lineNumber": 1022,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 13,
                  "native": false
                }
              ]
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "7419cad1-39e7-485e-9d93-f2c8216a67b3",
          "length": 13,
          "cycles": 1,
          "position": 9,
          "iteration": 0
        },
        "item": {
          "id": "7977a171-5d7d-4234-b83e-2ad5d14b19da",
          "name": "Add Business Profile Features with entitlements with limits",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
            "method": "PUT",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "TokenKey",
                "value": "{{TokenKey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{{newReqWithLimit}}"
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//var jsonData = JSON.parse(responseBody);",
                  "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                  "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                  "",
                  "tests[\"set limits for \"+environment['featureName']] = responseCode.code === 204;"
                ]
              }
            }
          ]
        },
        "request": {
          "url": "https://10.96.25.141:9445/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='101')",
          "method": "PUT",
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Accept",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "x-csrf-token",
              "value": "6994246455573289603"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "TokenKey",
              "value": "RkZJSEFTSGFkSnlZdCszS0V2RkE4QnB5SHRsWXBhRytldmdaM0hGakRpZnlBQXZIZFE9"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/3.0.2"
            },
            {
              "key": "Host",
              "value": "10.96.25.141:9445"
            },
            {
              "key": "cookie",
              "value": "JSESSIONID=0000Is68aquOxo1H-PJ4hZ8CIsl:30a58cb4-c233-4968-b4ea-0c9d0cee7bbe"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            },
            {
              "key": "content-length",
              "value": 19
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{{newReqWithLimit}}"
          },
          "description": {
            "content": "",
            "type": "text/plain"
          }
        },
        "response": {
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Servlet/3.1"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceVersion",
              "value": "1.0"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Nov 2016 07:14:52 GMT"
            },
            {
              "key": "Content-Length",
              "value": "114"
            },
            {
              "key": "Connection",
              "value": "Close"
            }
          ],
          "body": "{\"error\":{\"code\":\"OVE\",\"message\":{\"lang\":\"en\",\"value\":\"An exception of type 'MalformedJsonException' occurred.\"}}}",
          "cookie": [],
          "responseTime": 602,
          "responseSize": 114,
          "update": {},
          "reason": {},
          "text": {},
          "json": {},
          "mime": {},
          "dataURI": {},
          "size": {},
          "describe": {},
          "toObjectResolved": {},
          "toJSON": {},
          "meta": {}
        },
        "id": "7977a171-5d7d-4234-b83e-2ad5d14b19da",
        "assertions": [
          {
            "assertion": "set limits for Account Management",
            "error": {
              "name": "AssertionFailure",
              "index": 0,
              "message": "set limits for Account Management",
              "stack": "AssertionFailure: Expected tests[\"set limits for Account Management\"] to be truth-like\n   at Object.eval test.js:1:10)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "5ea2caf7-1077-4674-8c89-040176f16272",
          "length": 13,
          "cycles": 1,
          "position": 10,
          "iteration": 0
        },
        "item": {
          "id": "a296d108-e64d-41f4-bdc1-7eb93fd5f8de",
          "name": "get ProfileFeatures with children and limits verify",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
            "method": "GET",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "TokenKey",
                "value": "{{TokenKey}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var res = jsonData.d.results;",
                  "var limitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                  "for(var i=0;i<res.length;i++)",
                  "{",
                  "    var propArr = res[i].Properties.results;",
                  "    var childArr = res[i].Childrens.results;",
                  "    var parentLimit = res[i].Limits.results;",
                  "    //if(parentLimit.length>0)",
                  "    {",
                  "        for(var k=0;k<parentLimit.length;k++)",
                  "        {",
                  "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is null\"] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === null;",
                  "        }",
                  "    }",
                  "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                  "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                  "    for(var j=0;j<childArr.length;j++)",
                  "    {",
                  "        var childLimit = childArr[j].Limits.results;",
                  "    //if(childLimit.length>0)",
                  "        {",
                  "        for(var k=0;k<childLimit.length;k++)",
                  "            {",
                  "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is null\"] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === null;",
                  "            }",
                  "        }",
                  "        var childPropArr = childArr[j].Properties.results;",
                  "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                  "        //if(childPropArr.length>0)",
                  "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                  "    }",
                  "}",
                  "tests[\"check entitlements with limit for \"+environment['featureName']] = responseCode.code === 200;"
                ]
              }
            }
          ]
        },
        "request": {
          "url": "https://10.96.25.141:9445/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='101')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
          "method": "GET",
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Accept",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "x-csrf-token",
              "value": "6994246455573289603"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "TokenKey",
              "value": "RkZJSEFTSGFkSnlZdCszS0V2RkE4QnB5SHRsWXBhRytldmdaM0hGakRpZnlBQXZIZFE9"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/3.0.2"
            },
            {
              "key": "Host",
              "value": "10.96.25.141:9445"
            },
            {
              "key": "cookie",
              "value": "JSESSIONID=0000Is68aquOxo1H-PJ4hZ8CIsl:30a58cb4-c233-4968-b4ea-0c9d0cee7bbe"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "body": {
            "mode": "formdata",
            "formdata": []
          },
          "description": {
            "content": "",
            "type": "text/plain"
          }
        },
        "response": {
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Servlet/3.1"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceVersion",
              "value": "1.0"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Nov 2016 07:14:52 GMT"
            },
            {
              "key": "Content-Length",
              "value": "247"
            },
            {
              "key": "Connection",
              "value": "Close"
            }
          ],
          "body": "{\"error\":{\"code\":\"VE\",\"message\":{\"lang\":\"en\",\"value\":\"{\\\"errorKey\\\":\\\"Error-2_descr\\\",\\\"errorCode\\\":-2,\\\"errorDetails\\\":[{\\\"Desc\\\":\\\"Invalid profile group Id set.\\\",\\\"FieldName\\\":\\\"profileId\\\",\\\"Key\\\":\\\"add.feature.invalid.profile.groupId\\\"}]}\"}}}",
          "cookie": [],
          "responseTime": 609,
          "responseSize": 247,
          "update": {},
          "reason": {},
          "text": {},
          "json": {},
          "mime": {},
          "dataURI": {},
          "size": {},
          "describe": {},
          "toObjectResolved": {},
          "toJSON": {},
          "meta": {}
        },
        "id": "a296d108-e64d-41f4-bdc1-7eb93fd5f8de",
        "testScript": [
          {
            "error": {
              "name": "TypeError",
              "message": "Cannot read property 'results' of undefined",
              "stack": "TypeError: Cannot read property 'results' of undefined\n    at Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34), <anonymous>:4:21)\n    at evalmachine.<anonymous>:293:23\n    at evalmachine.<anonymous>:299:2\n    at Object.exports.runInContext (vm.js:44:17)\n    at _.extend._run (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:156:16)\n    at _.extend.execute (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:121:14)\n    at PostmanCollectionRun.<anonymous> (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js:179:27)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1144:13\n    at replenish (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1018:21)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1022:13",
              "checksum": "e88f12520d5aec786d78913275b6ebdb",
              "id": "66fa18b0-5458-4406-aa2c-56c179b1a52f",
              "timestamp": 1480058093040,
              "stacktrace": [
                {
                  "fileName": "<anonymous>",
                  "lineNumber": 4,
                  "functionName": "Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
                  "typeName": "Object",
                  "methodName": "eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
                  "columnNumber": 21,
                  "native": false
                },
                {
                  "fileName": "evalmachine.<anonymous>",
                  "lineNumber": 293,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 23,
                  "native": false
                },
                {
                  "fileName": "evalmachine.<anonymous>",
                  "lineNumber": 299,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 2,
                  "native": false
                },
                {
                  "fileName": "vm.js",
                  "lineNumber": 44,
                  "functionName": "Object.exports.runInContext",
                  "typeName": "Object",
                  "methodName": "exports.runInContext",
                  "columnNumber": 17,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
                  "lineNumber": 156,
                  "functionName": "_.extend._run",
                  "typeName": "_",
                  "methodName": "extend._run",
                  "columnNumber": 16,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
                  "lineNumber": 121,
                  "functionName": "_.extend.execute",
                  "typeName": "_",
                  "methodName": "extend.execute",
                  "columnNumber": 14,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js",
                  "lineNumber": 179,
                  "functionName": "",
                  "typeName": "PostmanCollectionRun",
                  "methodName": null,
                  "columnNumber": 27,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
                  "lineNumber": 1144,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 13,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
                  "lineNumber": 1018,
                  "functionName": "replenish",
                  "typeName": "Object",
                  "methodName": null,
                  "columnNumber": 21,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
                  "lineNumber": 1022,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 13,
                  "native": false
                }
              ]
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "6385b732-5b9b-4624-be53-ca32c6105b04",
          "length": 13,
          "cycles": 1,
          "position": 11,
          "iteration": 0
        },
        "item": {
          "id": "f453248f-5025-43a1-9f38-90d5ce5460d8",
          "name": "Add Business Profile Features with entitlements with limits on Channel",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
            "method": "PUT",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{{newReqWithLimitChannel}}"
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//var jsonData = JSON.parse(responseBody);",
                  "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                  "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                  "",
                  "tests[\"set limits on channel for \"+environment['featureName']] = responseCode.code === 204;"
                ]
              }
            }
          ]
        },
        "request": {
          "url": "https://10.96.25.141:9445/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='101')",
          "method": "PUT",
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Accept",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "x-csrf-token",
              "value": "6994246455573289603"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/3.0.2"
            },
            {
              "key": "Host",
              "value": "10.96.25.141:9445"
            },
            {
              "key": "cookie",
              "value": "JSESSIONID=0000Is68aquOxo1H-PJ4hZ8CIsl:30a58cb4-c233-4968-b4ea-0c9d0cee7bbe"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            },
            {
              "key": "content-length",
              "value": 26
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{{newReqWithLimitChannel}}"
          },
          "description": {
            "content": "",
            "type": "text/plain"
          }
        },
        "response": {
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Servlet/3.1"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceVersion",
              "value": "1.0"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Nov 2016 07:14:53 GMT"
            },
            {
              "key": "Content-Length",
              "value": "114"
            },
            {
              "key": "Connection",
              "value": "Close"
            }
          ],
          "body": "{\"error\":{\"code\":\"OVE\",\"message\":{\"lang\":\"en\",\"value\":\"An exception of type 'MalformedJsonException' occurred.\"}}}",
          "cookie": [],
          "responseTime": 625,
          "responseSize": 114,
          "update": {},
          "reason": {},
          "text": {},
          "json": {},
          "mime": {},
          "dataURI": {},
          "size": {},
          "describe": {},
          "toObjectResolved": {},
          "toJSON": {},
          "meta": {}
        },
        "id": "f453248f-5025-43a1-9f38-90d5ce5460d8",
        "assertions": [
          {
            "assertion": "set limits on channel for Account Management",
            "error": {
              "name": "AssertionFailure",
              "index": 0,
              "message": "set limits on channel for Account Management",
              "stack": "AssertionFailure: Expected tests[\"set limits on channel for Account Management\"] to be truth-like\n   at Object.eval test.js:1:12)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "0dfb5bfb-e7f3-445e-9636-2e953ad4a3d9",
          "length": 13,
          "cycles": 1,
          "position": 12,
          "iteration": 0
        },
        "item": {
          "id": "3d26e719-2cc3-4634-a785-7214bcd9a7e2",
          "name": "get ProfileFeatures with children and limits verify on channel",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
            "method": "GET",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "TokenKey",
                "value": "{{TokenKey}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var res = jsonData.d.results;",
                  "var limitArr = [\"50.00\",\"100.00\",\"200.00\",\"400.00\"];",
                  "var maxlimitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                  "for(var i=0;i<res.length;i++)",
                  "{",
                  "    var propArr = res[i].Properties.results;",
                  "    var childArr = res[i].Childrens.results;",
                  "    var parentLimit = res[i].Limits.results;",
                  "    //if(parentLimit.length>0)",
                  "    {",
                  "        for(var k=0;k<parentLimit.length;k++)",
                  "        {",
                  "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is : \"+maxlimitArr[k]] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === maxlimitArr[k];",
                  "        }",
                  "    }",
                  "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                  "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                  "    for(var j=0;j<childArr.length;j++)",
                  "    {",
                  "        var childLimit = childArr[j].Limits.results;",
                  "    //if(childLimit.length>0)",
                  "        {",
                  "        for(var k=0;k<childLimit.length;k++)",
                  "            {",
                  "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is :\"+maxlimitArr[k]] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === maxlimitArr[k];",
                  "            }",
                  "        }",
                  "        var childPropArr = childArr[j].Properties.results;",
                  "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                  "        //if(childPropArr.length>0)",
                  "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                  "    }",
                  "}",
                  "tests[\"check entitlements with limit on channel for \"+environment['featureName']] = responseCode.code === 200;"
                ]
              }
            }
          ]
        },
        "request": {
          "url": "https://10.96.25.141:9445/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='101')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
          "method": "GET",
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Accept",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "x-csrf-token",
              "value": "6994246455573289603"
            },
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "TokenKey",
              "value": "RkZJSEFTSGFkSnlZdCszS0V2RkE4QnB5SHRsWXBhRytldmdaM0hGakRpZnlBQXZIZFE9"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/3.0.2"
            },
            {
              "key": "Host",
              "value": "10.96.25.141:9445"
            },
            {
              "key": "cookie",
              "value": "JSESSIONID=0000Is68aquOxo1H-PJ4hZ8CIsl:30a58cb4-c233-4968-b4ea-0c9d0cee7bbe"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "body": {
            "mode": "formdata",
            "formdata": []
          },
          "description": {
            "content": "",
            "type": "text/plain"
          }
        },
        "response": {
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Servlet/3.1"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "DataServiceVersion",
              "value": "1.0"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Nov 2016 07:14:54 GMT"
            },
            {
              "key": "Content-Length",
              "value": "247"
            },
            {
              "key": "Connection",
              "value": "Close"
            }
          ],
          "body": "{\"error\":{\"code\":\"VE\",\"message\":{\"lang\":\"en\",\"value\":\"{\\\"errorKey\\\":\\\"Error-2_descr\\\",\\\"errorCode\\\":-2,\\\"errorDetails\\\":[{\\\"Desc\\\":\\\"Invalid profile group Id set.\\\",\\\"FieldName\\\":\\\"profileId\\\",\\\"Key\\\":\\\"add.feature.invalid.profile.groupId\\\"}]}\"}}}",
          "cookie": [],
          "responseTime": 1134,
          "responseSize": 247,
          "update": {},
          "reason": {},
          "text": {},
          "json": {},
          "mime": {},
          "dataURI": {},
          "size": {},
          "describe": {},
          "toObjectResolved": {},
          "toJSON": {},
          "meta": {}
        },
        "id": "3d26e719-2cc3-4634-a785-7214bcd9a7e2",
        "testScript": [
          {
            "error": {
              "name": "TypeError",
              "message": "Cannot read property 'results' of undefined",
              "stack": "TypeError: Cannot read property 'results' of undefined\n    at Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34), <anonymous>:4:21)\n    at evalmachine.<anonymous>:293:23\n    at evalmachine.<anonymous>:299:2\n    at Object.exports.runInContext (vm.js:44:17)\n    at _.extend._run (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:156:16)\n    at _.extend.execute (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:121:14)\n    at PostmanCollectionRun.<anonymous> (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js:179:27)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1144:13\n    at replenish (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1018:21)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1022:13",
              "checksum": "e88f12520d5aec786d78913275b6ebdb",
              "id": "6a857b57-cb98-4cb8-a22b-4e2c1867532e",
              "timestamp": 1480058095003,
              "stacktrace": [
                {
                  "fileName": "<anonymous>",
                  "lineNumber": 4,
                  "functionName": "Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
                  "typeName": "Object",
                  "methodName": "eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
                  "columnNumber": 21,
                  "native": false
                },
                {
                  "fileName": "evalmachine.<anonymous>",
                  "lineNumber": 293,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 23,
                  "native": false
                },
                {
                  "fileName": "evalmachine.<anonymous>",
                  "lineNumber": 299,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 2,
                  "native": false
                },
                {
                  "fileName": "vm.js",
                  "lineNumber": 44,
                  "functionName": "Object.exports.runInContext",
                  "typeName": "Object",
                  "methodName": "exports.runInContext",
                  "columnNumber": 17,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
                  "lineNumber": 156,
                  "functionName": "_.extend._run",
                  "typeName": "_",
                  "methodName": "extend._run",
                  "columnNumber": 16,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
                  "lineNumber": 121,
                  "functionName": "_.extend.execute",
                  "typeName": "_",
                  "methodName": "extend.execute",
                  "columnNumber": 14,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js",
                  "lineNumber": 179,
                  "functionName": "",
                  "typeName": "PostmanCollectionRun",
                  "methodName": null,
                  "columnNumber": 27,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
                  "lineNumber": 1144,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 13,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
                  "lineNumber": 1018,
                  "functionName": "replenish",
                  "typeName": "Object",
                  "methodName": null,
                  "columnNumber": 21,
                  "native": false
                },
                {
                  "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
                  "lineNumber": 1022,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 13,
                  "native": false
                }
              ]
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 3349
    },
    "failures": [
      {
        "error": {
          "name": "TypeError",
          "message": "Cannot read property 'results' of undefined",
          "stack": "TypeError: Cannot read property 'results' of undefined\n    at Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34), <anonymous>:4:21)\n    at evalmachine.<anonymous>:293:23\n    at evalmachine.<anonymous>:299:2\n    at Object.exports.runInContext (vm.js:44:17)\n    at _.extend._run (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:156:16)\n    at _.extend.execute (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:121:14)\n    at PostmanCollectionRun.<anonymous> (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js:179:27)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1144:13\n    at replenish (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1018:21)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1022:13",
          "checksum": "e88f12520d5aec786d78913275b6ebdb",
          "id": "6abef93a-35d5-45a9-b251-c8caa399f09d",
          "timestamp": 1480058066847,
          "stacktrace": [
            {
              "fileName": "<anonymous>",
              "lineNumber": 4,
              "functionName": "Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
              "typeName": "Object",
              "methodName": "eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "evalmachine.<anonymous>",
              "lineNumber": 293,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "evalmachine.<anonymous>",
              "lineNumber": 299,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 2,
              "native": false
            },
            {
              "fileName": "vm.js",
              "lineNumber": 44,
              "functionName": "Object.exports.runInContext",
              "typeName": "Object",
              "methodName": "exports.runInContext",
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
              "lineNumber": 156,
              "functionName": "_.extend._run",
              "typeName": "_",
              "methodName": "extend._run",
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
              "lineNumber": 121,
              "functionName": "_.extend.execute",
              "typeName": "_",
              "methodName": "extend.execute",
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js",
              "lineNumber": 179,
              "functionName": "",
              "typeName": "PostmanCollectionRun",
              "methodName": null,
              "columnNumber": 27,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 1144,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 1018,
              "functionName": "replenish",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 1022,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "test-script:2:21",
        "source": {
          "id": "9de3b21f-024a-49cc-9839-e5066d111a15",
          "name": "get ProfileFeatures without assigning feature",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
            "method": "GET",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "TokenKey",
                "value": "{{TokenKey}}"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var res = jsonData.d.results;",
                  "",
                  "var postResponse ={};",
                  "postResponse.ProfileId = \"{{Id}}\";",
                  "postResponse.FeatureId = \"{{featureId}}\";",
                  "",
                  "var jsonRequestBody = JSON.stringify(postResponse);",
                  "postman.setEnvironmentVariable('reqPutOnlyFeature',jsonRequestBody);",
                  "",
                  "tests[\"\"+environment['featureName']+\" get without assigning.\"] = responseCode.code === 200;"
                ]
              }
            }
          ]
        },
        "parent": {
          "description": {
            "content": "",
            "type": "text/plain"
          },
          "id": "83980377-4f43-4add-86d9-8fe657ed87f9",
          "name": "CB Feature Template",
          "item": [
            {
              "id": "facca270-9bce-4e09-b05e-1c353e30afee",
              "name": "Login",
              "request": {
                "url": "{{env}}/cb/odata/ns/authenticationservice/SecureUsers?action=init",
                "method": "POST",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\r\n               \"Id\": \"\",\r\n\r\n               \"UserName\": \"primaryadmin\",\r\n\r\n               \"AppType\": \"Business\",\r\n\r\n               \"Password\": \"Pass1234\",\r\n\r\n               \"ChannelType\": \"Web\"\r\n\r\n}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Logged in as primaryadmin for iteration : \"+environment['featureName']] = responseCode.code === 201;",
                      "postman.setEnvironmentVariable(\"TokenKey\",postman.getResponseHeader('TokenKey'));",
                      "postman.setEnvironmentVariable(\"x-csrf-token\",postman.getResponseHeader('x-csrf-token'));"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setEnvironmentVariable('featureId',data['f_id']);",
                      "postman.setEnvironmentVariable('featureName',data['name']);"
                    ]
                  }
                }
              ]
            },
            {
              "id": "9de3b21f-024a-49cc-9839-e5066d111a15",
              "name": "get ProfileFeatures without assigning feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('reqPutOnlyFeature',jsonRequestBody);",
                      "",
                      "tests[\"\"+environment['featureName']+\" get without assigning.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98d5151b-ce91-4438-b2c0-bd1ce79e04aa",
              "name": "Add Business Profile Feature without entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{reqPutOnlyFeature}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//postman.setEnvironmentVariable(\"featureId\", jsonData.d.FeatureId);",
                      "",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"ProfileId and FeatureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === '601';",
                      "tests[\"\"+environment['featureName']+\" added without entitlements.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a08bdd26-855e-4cc6-9855-8348d9f58b26",
              "name": "get ProfileFeatures entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Childrens,Childrens/Properties",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsList = [];",
                      "var channelEntitlementsList = [];",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    entitlementsList.push(entitlement);",
                      "",
                      "    var channelEntitlement = {};",
                      "    channelEntitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    channelEntitlement.Entitled = false;",
                      "    channelEntitlementsList.push(channelEntitlement);",
                      " ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var channelEntitlement = {};",
                      "        channelEntitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        channelEntitlement.Entitled = false;",
                      "        channelEntitlementsList.push(channelEntitlement);",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "",
                      "postResponse.Feature = entObj;",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "entObjChannel.Entitlements = channelEntitlementsList; ",
                      "",
                      "",
                      "var jsonRequestBodyCross = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReq',jsonRequestBodyCross);",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqChannel',jsonRequestBodyChannel);",
                      "",
                      "tests[\"status code is 200 : OK for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "14162a48-9ac6-4b33-a5d3-ad43a28f7124",
              "name": "delete feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "DELETE",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"\"+environment['featureName']+\" deleted.\"] = responseCode.code === 204;",
                      ""
                    ]
                  }
                }
              ]
            },
            {
              "id": "26012c65-7033-47ac-ac7e-2ec7bc52f771",
              "name": "Add Business Profile Features with entitlements (Valid Set)",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReq}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"\"+environment['featureName']+\" added with entitlements entitled true.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "cd9bd5df-8eab-4579-aa7c-daf209871195",
              "name": "get ProfileFeatures with children and limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entitlementsList = [];",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsListChannel = [];",
                      "",
                      "var limitValue = 1600;",
                      "var limitList = [];",
                      "var limitListChannel = [];",
                      "var periodType = [\"Per Month\",\"Per Week\",\"Per Day\",\"Per Transaction\"];",
                      "",
                      "for(var i=0;i<4;i++)",
                      "{",
                      "    limitValue = limitValue/2;",
                      "    limitValueChannel = limitValue/2;",
                      "    var limitObj = {};",
                      "    limitObj.Period=periodType[i];",
                      "    limitObj.Amount=limitValue.toString()+\".00\";",
                      "    limitObj.ExceedWithApproval=true;",
                      "    limitList.push(limitObj);",
                      "    ",
                      "    var limitObjChannel = {};",
                      "    limitObjChannel.Period=periodType[i];",
                      "    limitObjChannel.Amount=limitValueChannel.toString()+\".00\";",
                      "    limitObjChannel.ExceedWithApproval=true;",
                      "    limitListChannel.push(limitObjChannel);",
                      "}",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    var limitArr = res[i].Limits.results;",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlement.Limits=limitList;",
                      "    }",
                      "    entitlementsList.push(entitlement);",
                      "    ",
                      "    var entitlementChannel = {};",
                      "    entitlementChannel.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlementChannel.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlementChannel.Limits=limitListChannel;",
                      "    }",
                      "    entitlementsListChannel.push(entitlementChannel);",
                      "    ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlement.Limits=limitList;",
                      "        }",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var entitlementChannel = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlementChannel.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlementChannel.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlementChannel.Limits=limitListChannel;",
                      "        }",
                      "        entitlementsListChannel.push(entitlementChannel);",
                      "        ",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "postResponse.Feature = entObj;",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReqWithLimit',jsonRequestBody);",
                      "",
                      "entObjChannel.Entitlements = entitlementsListChannel; ",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqWithLimitChannel',jsonRequestBodyChannel);",
                      "tests[\"\"+environment['featureName']+\" expand limit,properties verified.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98f04459-2775-4071-82f1-795c11b47882",
              "name": "Add Business Profile Features with entitlements (Valid Set) copy",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"Change entitlements to entitled false on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "825abed4-1099-4b44-8cf5-da9e59e2d1b6",
              "name": "get ProfileFeatures with children entitled false on channel Verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"Entitlements checked (false) on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "7977a171-5d7d-4234-b83e-2ad5d14b19da",
              "name": "Add Business Profile Features with entitlements with limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimit}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a296d108-e64d-41f4-bdc1-7eb93fd5f8de",
              "name": "get ProfileFeatures with children and limits verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is null\"] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === null;",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is null\"] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === null;",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "f453248f-5025-43a1-9f38-90d5ce5460d8",
              "name": "Add Business Profile Features with entitlements with limits on Channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimitChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "3d26e719-2cc3-4634-a785-7214bcd9a7e2",
              "name": "get ProfileFeatures with children and limits verify on channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"50.00\",\"100.00\",\"200.00\",\"400.00\"];",
                      "var maxlimitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is : \"+maxlimitArr[k]] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is :\"+maxlimitArr[k]] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f3fefd7b-07a1-4b3c-9739-7adc8f8004e1",
          "length": 13,
          "cycles": 1,
          "position": 1,
          "iteration": 0
        }
      },
      {
        "error": {
          "name": "AssertionFailure",
          "index": 0,
          "message": "Account Management added without entitlements.",
          "stack": "AssertionFailure: Expected tests[\"Account Management added without entitlements.\"] to be truth-like\n   at Object.eval test.js:1:3)",
          "checksum": "9a56caa88b119b0fe38cc7203b25213a",
          "id": "6c06de5e-c4ad-4157-bdd2-ff8005e97e97",
          "timestamp": 1480058086709,
          "stacktrace": [
            {
              "fileName": "test.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "98d5151b-ce91-4438-b2c0-bd1ce79e04aa",
          "name": "Add Business Profile Feature without entitlements",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
            "method": "PUT",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "TokenKey",
                "value": "{{TokenKey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{{reqPutOnlyFeature}}"
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//var jsonData = JSON.parse(responseBody);",
                  "//postman.setEnvironmentVariable(\"featureId\", jsonData.d.FeatureId);",
                  "",
                  "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                  "//tests[\"ProfileId and FeatureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === '601';",
                  "tests[\"\"+environment['featureName']+\" added without entitlements.\"] = responseCode.code === 204;"
                ]
              }
            }
          ]
        },
        "parent": {
          "description": {
            "content": "",
            "type": "text/plain"
          },
          "id": "83980377-4f43-4add-86d9-8fe657ed87f9",
          "name": "CB Feature Template",
          "item": [
            {
              "id": "facca270-9bce-4e09-b05e-1c353e30afee",
              "name": "Login",
              "request": {
                "url": "{{env}}/cb/odata/ns/authenticationservice/SecureUsers?action=init",
                "method": "POST",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\r\n               \"Id\": \"\",\r\n\r\n               \"UserName\": \"primaryadmin\",\r\n\r\n               \"AppType\": \"Business\",\r\n\r\n               \"Password\": \"Pass1234\",\r\n\r\n               \"ChannelType\": \"Web\"\r\n\r\n}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Logged in as primaryadmin for iteration : \"+environment['featureName']] = responseCode.code === 201;",
                      "postman.setEnvironmentVariable(\"TokenKey\",postman.getResponseHeader('TokenKey'));",
                      "postman.setEnvironmentVariable(\"x-csrf-token\",postman.getResponseHeader('x-csrf-token'));"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setEnvironmentVariable('featureId',data['f_id']);",
                      "postman.setEnvironmentVariable('featureName',data['name']);"
                    ]
                  }
                }
              ]
            },
            {
              "id": "9de3b21f-024a-49cc-9839-e5066d111a15",
              "name": "get ProfileFeatures without assigning feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('reqPutOnlyFeature',jsonRequestBody);",
                      "",
                      "tests[\"\"+environment['featureName']+\" get without assigning.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98d5151b-ce91-4438-b2c0-bd1ce79e04aa",
              "name": "Add Business Profile Feature without entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{reqPutOnlyFeature}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//postman.setEnvironmentVariable(\"featureId\", jsonData.d.FeatureId);",
                      "",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"ProfileId and FeatureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === '601';",
                      "tests[\"\"+environment['featureName']+\" added without entitlements.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a08bdd26-855e-4cc6-9855-8348d9f58b26",
              "name": "get ProfileFeatures entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Childrens,Childrens/Properties",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsList = [];",
                      "var channelEntitlementsList = [];",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    entitlementsList.push(entitlement);",
                      "",
                      "    var channelEntitlement = {};",
                      "    channelEntitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    channelEntitlement.Entitled = false;",
                      "    channelEntitlementsList.push(channelEntitlement);",
                      " ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var channelEntitlement = {};",
                      "        channelEntitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        channelEntitlement.Entitled = false;",
                      "        channelEntitlementsList.push(channelEntitlement);",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "",
                      "postResponse.Feature = entObj;",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "entObjChannel.Entitlements = channelEntitlementsList; ",
                      "",
                      "",
                      "var jsonRequestBodyCross = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReq',jsonRequestBodyCross);",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqChannel',jsonRequestBodyChannel);",
                      "",
                      "tests[\"status code is 200 : OK for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "14162a48-9ac6-4b33-a5d3-ad43a28f7124",
              "name": "delete feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "DELETE",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"\"+environment['featureName']+\" deleted.\"] = responseCode.code === 204;",
                      ""
                    ]
                  }
                }
              ]
            },
            {
              "id": "26012c65-7033-47ac-ac7e-2ec7bc52f771",
              "name": "Add Business Profile Features with entitlements (Valid Set)",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReq}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"\"+environment['featureName']+\" added with entitlements entitled true.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "cd9bd5df-8eab-4579-aa7c-daf209871195",
              "name": "get ProfileFeatures with children and limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entitlementsList = [];",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsListChannel = [];",
                      "",
                      "var limitValue = 1600;",
                      "var limitList = [];",
                      "var limitListChannel = [];",
                      "var periodType = [\"Per Month\",\"Per Week\",\"Per Day\",\"Per Transaction\"];",
                      "",
                      "for(var i=0;i<4;i++)",
                      "{",
                      "    limitValue = limitValue/2;",
                      "    limitValueChannel = limitValue/2;",
                      "    var limitObj = {};",
                      "    limitObj.Period=periodType[i];",
                      "    limitObj.Amount=limitValue.toString()+\".00\";",
                      "    limitObj.ExceedWithApproval=true;",
                      "    limitList.push(limitObj);",
                      "    ",
                      "    var limitObjChannel = {};",
                      "    limitObjChannel.Period=periodType[i];",
                      "    limitObjChannel.Amount=limitValueChannel.toString()+\".00\";",
                      "    limitObjChannel.ExceedWithApproval=true;",
                      "    limitListChannel.push(limitObjChannel);",
                      "}",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    var limitArr = res[i].Limits.results;",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlement.Limits=limitList;",
                      "    }",
                      "    entitlementsList.push(entitlement);",
                      "    ",
                      "    var entitlementChannel = {};",
                      "    entitlementChannel.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlementChannel.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlementChannel.Limits=limitListChannel;",
                      "    }",
                      "    entitlementsListChannel.push(entitlementChannel);",
                      "    ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlement.Limits=limitList;",
                      "        }",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var entitlementChannel = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlementChannel.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlementChannel.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlementChannel.Limits=limitListChannel;",
                      "        }",
                      "        entitlementsListChannel.push(entitlementChannel);",
                      "        ",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "postResponse.Feature = entObj;",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReqWithLimit',jsonRequestBody);",
                      "",
                      "entObjChannel.Entitlements = entitlementsListChannel; ",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqWithLimitChannel',jsonRequestBodyChannel);",
                      "tests[\"\"+environment['featureName']+\" expand limit,properties verified.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98f04459-2775-4071-82f1-795c11b47882",
              "name": "Add Business Profile Features with entitlements (Valid Set) copy",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"Change entitlements to entitled false on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "825abed4-1099-4b44-8cf5-da9e59e2d1b6",
              "name": "get ProfileFeatures with children entitled false on channel Verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"Entitlements checked (false) on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "7977a171-5d7d-4234-b83e-2ad5d14b19da",
              "name": "Add Business Profile Features with entitlements with limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimit}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a296d108-e64d-41f4-bdc1-7eb93fd5f8de",
              "name": "get ProfileFeatures with children and limits verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is null\"] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === null;",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is null\"] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === null;",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "f453248f-5025-43a1-9f38-90d5ce5460d8",
              "name": "Add Business Profile Features with entitlements with limits on Channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimitChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "3d26e719-2cc3-4634-a785-7214bcd9a7e2",
              "name": "get ProfileFeatures with children and limits verify on channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"50.00\",\"100.00\",\"200.00\",\"400.00\"];",
                      "var maxlimitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is : \"+maxlimitArr[k]] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is :\"+maxlimitArr[k]] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "bf7406ec-8164-47c2-bff8-f9f06df5c788",
          "length": 13,
          "cycles": 1,
          "position": 2,
          "iteration": 0
        }
      },
      {
        "error": {
          "name": "TypeError",
          "message": "Cannot read property 'results' of undefined",
          "stack": "TypeError: Cannot read property 'results' of undefined\n    at Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34), <anonymous>:4:21)\n    at evalmachine.<anonymous>:293:23\n    at evalmachine.<anonymous>:299:2\n    at Object.exports.runInContext (vm.js:44:17)\n    at _.extend._run (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:156:16)\n    at _.extend.execute (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:121:14)\n    at PostmanCollectionRun.<anonymous> (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js:179:27)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1144:13\n    at replenish (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1018:21)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1022:13",
          "checksum": "e88f12520d5aec786d78913275b6ebdb",
          "id": "078975ea-f8fe-4cfb-bcca-e03ada057dc2",
          "timestamp": 1480058087408,
          "stacktrace": [
            {
              "fileName": "<anonymous>",
              "lineNumber": 4,
              "functionName": "Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
              "typeName": "Object",
              "methodName": "eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "evalmachine.<anonymous>",
              "lineNumber": 293,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "evalmachine.<anonymous>",
              "lineNumber": 299,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 2,
              "native": false
            },
            {
              "fileName": "vm.js",
              "lineNumber": 44,
              "functionName": "Object.exports.runInContext",
              "typeName": "Object",
              "methodName": "exports.runInContext",
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
              "lineNumber": 156,
              "functionName": "_.extend._run",
              "typeName": "_",
              "methodName": "extend._run",
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
              "lineNumber": 121,
              "functionName": "_.extend.execute",
              "typeName": "_",
              "methodName": "extend.execute",
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js",
              "lineNumber": 179,
              "functionName": "",
              "typeName": "PostmanCollectionRun",
              "methodName": null,
              "columnNumber": 27,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 1144,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 1018,
              "functionName": "replenish",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 1022,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "test-script:2:21",
        "source": {
          "id": "a08bdd26-855e-4cc6-9855-8348d9f58b26",
          "name": "get ProfileFeatures entitlements",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Childrens,Childrens/Properties",
            "method": "GET",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "TokenKey",
                "value": "{{TokenKey}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var res = jsonData.d.results;",
                  "",
                  "var postResponse ={};",
                  "postResponse.ProfileId = \"{{Id}}\";",
                  "postResponse.FeatureId = \"{{featureId}}\";",
                  "",
                  "var postResponseChannel ={};",
                  "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                  "postResponseChannel.FeatureId = \"{{featureId}}\";",
                  "",
                  "var entObj = {};",
                  "var featureObj = {};",
                  "var entObjChannel = {};",
                  "var featureObjChannel = {};",
                  "var entitlementsList = [];",
                  "var channelEntitlementsList = [];",
                  "",
                  "for(var i=0;i<res.length;i++)",
                  "{",
                  "    var entitlement = {};",
                  "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                  "    entitlement.Entitled = true;",
                  "    entitlementsList.push(entitlement);",
                  "",
                  "    var channelEntitlement = {};",
                  "    channelEntitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                  "    channelEntitlement.Entitled = false;",
                  "    channelEntitlementsList.push(channelEntitlement);",
                  " ",
                  "    var propArr = res[i].Properties.results;",
                  "    var childArr = res[i].Childrens.results;",
                  "    ",
                  "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                  "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                  "   for(var j=0;j<childArr.length;j++)",
                  "    {",
                  "        var entitlement = {};",
                  "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                  "        entitlement.Entitled = true;",
                  "        entitlementsList.push(entitlement);",
                  "        ",
                  "        var channelEntitlement = {};",
                  "        channelEntitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                  "        channelEntitlement.Entitled = false;",
                  "        channelEntitlementsList.push(channelEntitlement);",
                  "        ",
                  "        var childPropArr = childArr[j].Properties.results;",
                  "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                  "        ",
                  "        //if(childPropArr.length>0)",
                  "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                  "    }",
                  "}",
                  "",
                  "entObj.Entitlements = entitlementsList; ",
                  "",
                  "postResponse.Feature = entObj;",
                  "postResponseChannel.Feature = entObjChannel;",
                  "",
                  "entObjChannel.Entitlements = channelEntitlementsList; ",
                  "",
                  "",
                  "var jsonRequestBodyCross = JSON.stringify(postResponse);",
                  "postman.setEnvironmentVariable('newReq',jsonRequestBodyCross);",
                  "",
                  "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                  "postman.setEnvironmentVariable('newReqChannel',jsonRequestBodyChannel);",
                  "",
                  "tests[\"status code is 200 : OK for \"+environment['featureName']] = responseCode.code === 200;"
                ]
              }
            }
          ]
        },
        "parent": {
          "description": {
            "content": "",
            "type": "text/plain"
          },
          "id": "83980377-4f43-4add-86d9-8fe657ed87f9",
          "name": "CB Feature Template",
          "item": [
            {
              "id": "facca270-9bce-4e09-b05e-1c353e30afee",
              "name": "Login",
              "request": {
                "url": "{{env}}/cb/odata/ns/authenticationservice/SecureUsers?action=init",
                "method": "POST",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\r\n               \"Id\": \"\",\r\n\r\n               \"UserName\": \"primaryadmin\",\r\n\r\n               \"AppType\": \"Business\",\r\n\r\n               \"Password\": \"Pass1234\",\r\n\r\n               \"ChannelType\": \"Web\"\r\n\r\n}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Logged in as primaryadmin for iteration : \"+environment['featureName']] = responseCode.code === 201;",
                      "postman.setEnvironmentVariable(\"TokenKey\",postman.getResponseHeader('TokenKey'));",
                      "postman.setEnvironmentVariable(\"x-csrf-token\",postman.getResponseHeader('x-csrf-token'));"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setEnvironmentVariable('featureId',data['f_id']);",
                      "postman.setEnvironmentVariable('featureName',data['name']);"
                    ]
                  }
                }
              ]
            },
            {
              "id": "9de3b21f-024a-49cc-9839-e5066d111a15",
              "name": "get ProfileFeatures without assigning feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('reqPutOnlyFeature',jsonRequestBody);",
                      "",
                      "tests[\"\"+environment['featureName']+\" get without assigning.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98d5151b-ce91-4438-b2c0-bd1ce79e04aa",
              "name": "Add Business Profile Feature without entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{reqPutOnlyFeature}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//postman.setEnvironmentVariable(\"featureId\", jsonData.d.FeatureId);",
                      "",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"ProfileId and FeatureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === '601';",
                      "tests[\"\"+environment['featureName']+\" added without entitlements.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a08bdd26-855e-4cc6-9855-8348d9f58b26",
              "name": "get ProfileFeatures entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Childrens,Childrens/Properties",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsList = [];",
                      "var channelEntitlementsList = [];",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    entitlementsList.push(entitlement);",
                      "",
                      "    var channelEntitlement = {};",
                      "    channelEntitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    channelEntitlement.Entitled = false;",
                      "    channelEntitlementsList.push(channelEntitlement);",
                      " ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var channelEntitlement = {};",
                      "        channelEntitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        channelEntitlement.Entitled = false;",
                      "        channelEntitlementsList.push(channelEntitlement);",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "",
                      "postResponse.Feature = entObj;",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "entObjChannel.Entitlements = channelEntitlementsList; ",
                      "",
                      "",
                      "var jsonRequestBodyCross = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReq',jsonRequestBodyCross);",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqChannel',jsonRequestBodyChannel);",
                      "",
                      "tests[\"status code is 200 : OK for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "14162a48-9ac6-4b33-a5d3-ad43a28f7124",
              "name": "delete feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "DELETE",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"\"+environment['featureName']+\" deleted.\"] = responseCode.code === 204;",
                      ""
                    ]
                  }
                }
              ]
            },
            {
              "id": "26012c65-7033-47ac-ac7e-2ec7bc52f771",
              "name": "Add Business Profile Features with entitlements (Valid Set)",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReq}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"\"+environment['featureName']+\" added with entitlements entitled true.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "cd9bd5df-8eab-4579-aa7c-daf209871195",
              "name": "get ProfileFeatures with children and limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entitlementsList = [];",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsListChannel = [];",
                      "",
                      "var limitValue = 1600;",
                      "var limitList = [];",
                      "var limitListChannel = [];",
                      "var periodType = [\"Per Month\",\"Per Week\",\"Per Day\",\"Per Transaction\"];",
                      "",
                      "for(var i=0;i<4;i++)",
                      "{",
                      "    limitValue = limitValue/2;",
                      "    limitValueChannel = limitValue/2;",
                      "    var limitObj = {};",
                      "    limitObj.Period=periodType[i];",
                      "    limitObj.Amount=limitValue.toString()+\".00\";",
                      "    limitObj.ExceedWithApproval=true;",
                      "    limitList.push(limitObj);",
                      "    ",
                      "    var limitObjChannel = {};",
                      "    limitObjChannel.Period=periodType[i];",
                      "    limitObjChannel.Amount=limitValueChannel.toString()+\".00\";",
                      "    limitObjChannel.ExceedWithApproval=true;",
                      "    limitListChannel.push(limitObjChannel);",
                      "}",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    var limitArr = res[i].Limits.results;",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlement.Limits=limitList;",
                      "    }",
                      "    entitlementsList.push(entitlement);",
                      "    ",
                      "    var entitlementChannel = {};",
                      "    entitlementChannel.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlementChannel.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlementChannel.Limits=limitListChannel;",
                      "    }",
                      "    entitlementsListChannel.push(entitlementChannel);",
                      "    ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlement.Limits=limitList;",
                      "        }",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var entitlementChannel = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlementChannel.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlementChannel.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlementChannel.Limits=limitListChannel;",
                      "        }",
                      "        entitlementsListChannel.push(entitlementChannel);",
                      "        ",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "postResponse.Feature = entObj;",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReqWithLimit',jsonRequestBody);",
                      "",
                      "entObjChannel.Entitlements = entitlementsListChannel; ",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqWithLimitChannel',jsonRequestBodyChannel);",
                      "tests[\"\"+environment['featureName']+\" expand limit,properties verified.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98f04459-2775-4071-82f1-795c11b47882",
              "name": "Add Business Profile Features with entitlements (Valid Set) copy",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"Change entitlements to entitled false on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "825abed4-1099-4b44-8cf5-da9e59e2d1b6",
              "name": "get ProfileFeatures with children entitled false on channel Verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"Entitlements checked (false) on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "7977a171-5d7d-4234-b83e-2ad5d14b19da",
              "name": "Add Business Profile Features with entitlements with limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimit}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a296d108-e64d-41f4-bdc1-7eb93fd5f8de",
              "name": "get ProfileFeatures with children and limits verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is null\"] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === null;",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is null\"] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === null;",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "f453248f-5025-43a1-9f38-90d5ce5460d8",
              "name": "Add Business Profile Features with entitlements with limits on Channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimitChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "3d26e719-2cc3-4634-a785-7214bcd9a7e2",
              "name": "get ProfileFeatures with children and limits verify on channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"50.00\",\"100.00\",\"200.00\",\"400.00\"];",
                      "var maxlimitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is : \"+maxlimitArr[k]] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is :\"+maxlimitArr[k]] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a89294bd-7c5d-4c4f-bf47-6424633729b6",
          "length": 13,
          "cycles": 1,
          "position": 3,
          "iteration": 0
        }
      },
      {
        "error": {
          "name": "AssertionFailure",
          "index": 0,
          "message": "Account Management deleted.",
          "stack": "AssertionFailure: Expected tests[\"Account Management deleted.\"] to be truth-like\n   at Object.eval test.js:1:5)",
          "checksum": "9a9d8cb78c5bae3661127317c8bfc3a9",
          "id": "e0086448-9804-49c3-b3a4-273a8bfc6d18",
          "timestamp": 1480058088079,
          "stacktrace": [
            {
              "fileName": "test.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "14162a48-9ac6-4b33-a5d3-ad43a28f7124",
          "name": "delete feature",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
            "method": "DELETE",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "TokenKey",
                "value": "{{TokenKey}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "tests[\"\"+environment['featureName']+\" deleted.\"] = responseCode.code === 204;",
                  ""
                ]
              }
            }
          ]
        },
        "parent": {
          "description": {
            "content": "",
            "type": "text/plain"
          },
          "id": "83980377-4f43-4add-86d9-8fe657ed87f9",
          "name": "CB Feature Template",
          "item": [
            {
              "id": "facca270-9bce-4e09-b05e-1c353e30afee",
              "name": "Login",
              "request": {
                "url": "{{env}}/cb/odata/ns/authenticationservice/SecureUsers?action=init",
                "method": "POST",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\r\n               \"Id\": \"\",\r\n\r\n               \"UserName\": \"primaryadmin\",\r\n\r\n               \"AppType\": \"Business\",\r\n\r\n               \"Password\": \"Pass1234\",\r\n\r\n               \"ChannelType\": \"Web\"\r\n\r\n}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Logged in as primaryadmin for iteration : \"+environment['featureName']] = responseCode.code === 201;",
                      "postman.setEnvironmentVariable(\"TokenKey\",postman.getResponseHeader('TokenKey'));",
                      "postman.setEnvironmentVariable(\"x-csrf-token\",postman.getResponseHeader('x-csrf-token'));"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setEnvironmentVariable('featureId',data['f_id']);",
                      "postman.setEnvironmentVariable('featureName',data['name']);"
                    ]
                  }
                }
              ]
            },
            {
              "id": "9de3b21f-024a-49cc-9839-e5066d111a15",
              "name": "get ProfileFeatures without assigning feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('reqPutOnlyFeature',jsonRequestBody);",
                      "",
                      "tests[\"\"+environment['featureName']+\" get without assigning.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98d5151b-ce91-4438-b2c0-bd1ce79e04aa",
              "name": "Add Business Profile Feature without entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{reqPutOnlyFeature}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//postman.setEnvironmentVariable(\"featureId\", jsonData.d.FeatureId);",
                      "",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"ProfileId and FeatureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === '601';",
                      "tests[\"\"+environment['featureName']+\" added without entitlements.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a08bdd26-855e-4cc6-9855-8348d9f58b26",
              "name": "get ProfileFeatures entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Childrens,Childrens/Properties",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsList = [];",
                      "var channelEntitlementsList = [];",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    entitlementsList.push(entitlement);",
                      "",
                      "    var channelEntitlement = {};",
                      "    channelEntitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    channelEntitlement.Entitled = false;",
                      "    channelEntitlementsList.push(channelEntitlement);",
                      " ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var channelEntitlement = {};",
                      "        channelEntitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        channelEntitlement.Entitled = false;",
                      "        channelEntitlementsList.push(channelEntitlement);",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "",
                      "postResponse.Feature = entObj;",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "entObjChannel.Entitlements = channelEntitlementsList; ",
                      "",
                      "",
                      "var jsonRequestBodyCross = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReq',jsonRequestBodyCross);",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqChannel',jsonRequestBodyChannel);",
                      "",
                      "tests[\"status code is 200 : OK for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "14162a48-9ac6-4b33-a5d3-ad43a28f7124",
              "name": "delete feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "DELETE",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"\"+environment['featureName']+\" deleted.\"] = responseCode.code === 204;",
                      ""
                    ]
                  }
                }
              ]
            },
            {
              "id": "26012c65-7033-47ac-ac7e-2ec7bc52f771",
              "name": "Add Business Profile Features with entitlements (Valid Set)",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReq}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"\"+environment['featureName']+\" added with entitlements entitled true.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "cd9bd5df-8eab-4579-aa7c-daf209871195",
              "name": "get ProfileFeatures with children and limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entitlementsList = [];",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsListChannel = [];",
                      "",
                      "var limitValue = 1600;",
                      "var limitList = [];",
                      "var limitListChannel = [];",
                      "var periodType = [\"Per Month\",\"Per Week\",\"Per Day\",\"Per Transaction\"];",
                      "",
                      "for(var i=0;i<4;i++)",
                      "{",
                      "    limitValue = limitValue/2;",
                      "    limitValueChannel = limitValue/2;",
                      "    var limitObj = {};",
                      "    limitObj.Period=periodType[i];",
                      "    limitObj.Amount=limitValue.toString()+\".00\";",
                      "    limitObj.ExceedWithApproval=true;",
                      "    limitList.push(limitObj);",
                      "    ",
                      "    var limitObjChannel = {};",
                      "    limitObjChannel.Period=periodType[i];",
                      "    limitObjChannel.Amount=limitValueChannel.toString()+\".00\";",
                      "    limitObjChannel.ExceedWithApproval=true;",
                      "    limitListChannel.push(limitObjChannel);",
                      "}",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    var limitArr = res[i].Limits.results;",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlement.Limits=limitList;",
                      "    }",
                      "    entitlementsList.push(entitlement);",
                      "    ",
                      "    var entitlementChannel = {};",
                      "    entitlementChannel.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlementChannel.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlementChannel.Limits=limitListChannel;",
                      "    }",
                      "    entitlementsListChannel.push(entitlementChannel);",
                      "    ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlement.Limits=limitList;",
                      "        }",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var entitlementChannel = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlementChannel.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlementChannel.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlementChannel.Limits=limitListChannel;",
                      "        }",
                      "        entitlementsListChannel.push(entitlementChannel);",
                      "        ",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "postResponse.Feature = entObj;",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReqWithLimit',jsonRequestBody);",
                      "",
                      "entObjChannel.Entitlements = entitlementsListChannel; ",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqWithLimitChannel',jsonRequestBodyChannel);",
                      "tests[\"\"+environment['featureName']+\" expand limit,properties verified.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98f04459-2775-4071-82f1-795c11b47882",
              "name": "Add Business Profile Features with entitlements (Valid Set) copy",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"Change entitlements to entitled false on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "825abed4-1099-4b44-8cf5-da9e59e2d1b6",
              "name": "get ProfileFeatures with children entitled false on channel Verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"Entitlements checked (false) on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "7977a171-5d7d-4234-b83e-2ad5d14b19da",
              "name": "Add Business Profile Features with entitlements with limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimit}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a296d108-e64d-41f4-bdc1-7eb93fd5f8de",
              "name": "get ProfileFeatures with children and limits verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is null\"] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === null;",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is null\"] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === null;",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "f453248f-5025-43a1-9f38-90d5ce5460d8",
              "name": "Add Business Profile Features with entitlements with limits on Channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimitChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "3d26e719-2cc3-4634-a785-7214bcd9a7e2",
              "name": "get ProfileFeatures with children and limits verify on channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"50.00\",\"100.00\",\"200.00\",\"400.00\"];",
                      "var maxlimitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is : \"+maxlimitArr[k]] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is :\"+maxlimitArr[k]] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "8cf9d198-7cfa-45c8-aac2-66bb3f3b0b4b",
          "length": 13,
          "cycles": 1,
          "position": 4,
          "iteration": 0
        }
      },
      {
        "error": {
          "name": "AssertionFailure",
          "index": 0,
          "message": "Account Management added with entitlements entitled true.",
          "stack": "AssertionFailure: Expected tests[\"Account Management added with entitlements entitled true.\"] to be truth-like\n   at Object.eval test.js:1:6)",
          "checksum": "380561cae37dfe9066fa775f3217bb20",
          "id": "e08cad40-7e82-4263-a612-1cea993d788d",
          "timestamp": 1480058089255,
          "stacktrace": [
            {
              "fileName": "test.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "26012c65-7033-47ac-ac7e-2ec7bc52f771",
          "name": "Add Business Profile Features with entitlements (Valid Set)",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
            "method": "PUT",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "TokenKey",
                "value": "{{TokenKey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{{newReq}}"
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//var jsonData = JSON.parse(responseBody);",
                  "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                  "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                  "",
                  "tests[\"\"+environment['featureName']+\" added with entitlements entitled true.\"] = responseCode.code === 204;"
                ]
              }
            }
          ]
        },
        "parent": {
          "description": {
            "content": "",
            "type": "text/plain"
          },
          "id": "83980377-4f43-4add-86d9-8fe657ed87f9",
          "name": "CB Feature Template",
          "item": [
            {
              "id": "facca270-9bce-4e09-b05e-1c353e30afee",
              "name": "Login",
              "request": {
                "url": "{{env}}/cb/odata/ns/authenticationservice/SecureUsers?action=init",
                "method": "POST",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\r\n               \"Id\": \"\",\r\n\r\n               \"UserName\": \"primaryadmin\",\r\n\r\n               \"AppType\": \"Business\",\r\n\r\n               \"Password\": \"Pass1234\",\r\n\r\n               \"ChannelType\": \"Web\"\r\n\r\n}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Logged in as primaryadmin for iteration : \"+environment['featureName']] = responseCode.code === 201;",
                      "postman.setEnvironmentVariable(\"TokenKey\",postman.getResponseHeader('TokenKey'));",
                      "postman.setEnvironmentVariable(\"x-csrf-token\",postman.getResponseHeader('x-csrf-token'));"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setEnvironmentVariable('featureId',data['f_id']);",
                      "postman.setEnvironmentVariable('featureName',data['name']);"
                    ]
                  }
                }
              ]
            },
            {
              "id": "9de3b21f-024a-49cc-9839-e5066d111a15",
              "name": "get ProfileFeatures without assigning feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('reqPutOnlyFeature',jsonRequestBody);",
                      "",
                      "tests[\"\"+environment['featureName']+\" get without assigning.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98d5151b-ce91-4438-b2c0-bd1ce79e04aa",
              "name": "Add Business Profile Feature without entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{reqPutOnlyFeature}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//postman.setEnvironmentVariable(\"featureId\", jsonData.d.FeatureId);",
                      "",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"ProfileId and FeatureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === '601';",
                      "tests[\"\"+environment['featureName']+\" added without entitlements.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a08bdd26-855e-4cc6-9855-8348d9f58b26",
              "name": "get ProfileFeatures entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Childrens,Childrens/Properties",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsList = [];",
                      "var channelEntitlementsList = [];",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    entitlementsList.push(entitlement);",
                      "",
                      "    var channelEntitlement = {};",
                      "    channelEntitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    channelEntitlement.Entitled = false;",
                      "    channelEntitlementsList.push(channelEntitlement);",
                      " ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var channelEntitlement = {};",
                      "        channelEntitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        channelEntitlement.Entitled = false;",
                      "        channelEntitlementsList.push(channelEntitlement);",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "",
                      "postResponse.Feature = entObj;",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "entObjChannel.Entitlements = channelEntitlementsList; ",
                      "",
                      "",
                      "var jsonRequestBodyCross = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReq',jsonRequestBodyCross);",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqChannel',jsonRequestBodyChannel);",
                      "",
                      "tests[\"status code is 200 : OK for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "14162a48-9ac6-4b33-a5d3-ad43a28f7124",
              "name": "delete feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "DELETE",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"\"+environment['featureName']+\" deleted.\"] = responseCode.code === 204;",
                      ""
                    ]
                  }
                }
              ]
            },
            {
              "id": "26012c65-7033-47ac-ac7e-2ec7bc52f771",
              "name": "Add Business Profile Features with entitlements (Valid Set)",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReq}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"\"+environment['featureName']+\" added with entitlements entitled true.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "cd9bd5df-8eab-4579-aa7c-daf209871195",
              "name": "get ProfileFeatures with children and limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entitlementsList = [];",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsListChannel = [];",
                      "",
                      "var limitValue = 1600;",
                      "var limitList = [];",
                      "var limitListChannel = [];",
                      "var periodType = [\"Per Month\",\"Per Week\",\"Per Day\",\"Per Transaction\"];",
                      "",
                      "for(var i=0;i<4;i++)",
                      "{",
                      "    limitValue = limitValue/2;",
                      "    limitValueChannel = limitValue/2;",
                      "    var limitObj = {};",
                      "    limitObj.Period=periodType[i];",
                      "    limitObj.Amount=limitValue.toString()+\".00\";",
                      "    limitObj.ExceedWithApproval=true;",
                      "    limitList.push(limitObj);",
                      "    ",
                      "    var limitObjChannel = {};",
                      "    limitObjChannel.Period=periodType[i];",
                      "    limitObjChannel.Amount=limitValueChannel.toString()+\".00\";",
                      "    limitObjChannel.ExceedWithApproval=true;",
                      "    limitListChannel.push(limitObjChannel);",
                      "}",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    var limitArr = res[i].Limits.results;",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlement.Limits=limitList;",
                      "    }",
                      "    entitlementsList.push(entitlement);",
                      "    ",
                      "    var entitlementChannel = {};",
                      "    entitlementChannel.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlementChannel.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlementChannel.Limits=limitListChannel;",
                      "    }",
                      "    entitlementsListChannel.push(entitlementChannel);",
                      "    ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlement.Limits=limitList;",
                      "        }",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var entitlementChannel = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlementChannel.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlementChannel.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlementChannel.Limits=limitListChannel;",
                      "        }",
                      "        entitlementsListChannel.push(entitlementChannel);",
                      "        ",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "postResponse.Feature = entObj;",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReqWithLimit',jsonRequestBody);",
                      "",
                      "entObjChannel.Entitlements = entitlementsListChannel; ",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqWithLimitChannel',jsonRequestBodyChannel);",
                      "tests[\"\"+environment['featureName']+\" expand limit,properties verified.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98f04459-2775-4071-82f1-795c11b47882",
              "name": "Add Business Profile Features with entitlements (Valid Set) copy",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"Change entitlements to entitled false on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "825abed4-1099-4b44-8cf5-da9e59e2d1b6",
              "name": "get ProfileFeatures with children entitled false on channel Verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"Entitlements checked (false) on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "7977a171-5d7d-4234-b83e-2ad5d14b19da",
              "name": "Add Business Profile Features with entitlements with limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimit}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a296d108-e64d-41f4-bdc1-7eb93fd5f8de",
              "name": "get ProfileFeatures with children and limits verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is null\"] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === null;",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is null\"] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === null;",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "f453248f-5025-43a1-9f38-90d5ce5460d8",
              "name": "Add Business Profile Features with entitlements with limits on Channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimitChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "3d26e719-2cc3-4634-a785-7214bcd9a7e2",
              "name": "get ProfileFeatures with children and limits verify on channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"50.00\",\"100.00\",\"200.00\",\"400.00\"];",
                      "var maxlimitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is : \"+maxlimitArr[k]] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is :\"+maxlimitArr[k]] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "75baaabd-4f4b-44a0-977d-7a5dbddefd71",
          "length": 13,
          "cycles": 1,
          "position": 5,
          "iteration": 0
        }
      },
      {
        "error": {
          "name": "TypeError",
          "message": "Cannot read property 'results' of undefined",
          "stack": "TypeError: Cannot read property 'results' of undefined\n    at Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34), <anonymous>:4:21)\n    at evalmachine.<anonymous>:293:23\n    at evalmachine.<anonymous>:299:2\n    at Object.exports.runInContext (vm.js:44:17)\n    at _.extend._run (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:156:16)\n    at _.extend.execute (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:121:14)\n    at PostmanCollectionRun.<anonymous> (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js:179:27)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1144:13\n    at replenish (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1018:21)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1022:13",
          "checksum": "e88f12520d5aec786d78913275b6ebdb",
          "id": "99c40a00-357a-4de6-b01f-a0bf7ff8c4db",
          "timestamp": 1480058090001,
          "stacktrace": [
            {
              "fileName": "<anonymous>",
              "lineNumber": 4,
              "functionName": "Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
              "typeName": "Object",
              "methodName": "eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "evalmachine.<anonymous>",
              "lineNumber": 293,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "evalmachine.<anonymous>",
              "lineNumber": 299,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 2,
              "native": false
            },
            {
              "fileName": "vm.js",
              "lineNumber": 44,
              "functionName": "Object.exports.runInContext",
              "typeName": "Object",
              "methodName": "exports.runInContext",
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
              "lineNumber": 156,
              "functionName": "_.extend._run",
              "typeName": "_",
              "methodName": "extend._run",
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
              "lineNumber": 121,
              "functionName": "_.extend.execute",
              "typeName": "_",
              "methodName": "extend.execute",
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js",
              "lineNumber": 179,
              "functionName": "",
              "typeName": "PostmanCollectionRun",
              "methodName": null,
              "columnNumber": 27,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 1144,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 1018,
              "functionName": "replenish",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 1022,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "test-script:2:21",
        "source": {
          "id": "cd9bd5df-8eab-4579-aa7c-daf209871195",
          "name": "get ProfileFeatures with children and limits",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
            "method": "GET",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "TokenKey",
                "value": "{{TokenKey}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var res = jsonData.d.results;",
                  "",
                  "var postResponse ={};",
                  "postResponse.ProfileId = \"{{Id}}\";",
                  "postResponse.FeatureId = \"{{featureId}}\";",
                  "",
                  "var postResponseChannel ={};",
                  "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                  "postResponseChannel.FeatureId = \"{{featureId}}\";",
                  "",
                  "var entObj = {};",
                  "var featureObj = {};",
                  "var entitlementsList = [];",
                  "var entObjChannel = {};",
                  "var featureObjChannel = {};",
                  "var entitlementsListChannel = [];",
                  "",
                  "var limitValue = 1600;",
                  "var limitList = [];",
                  "var limitListChannel = [];",
                  "var periodType = [\"Per Month\",\"Per Week\",\"Per Day\",\"Per Transaction\"];",
                  "",
                  "for(var i=0;i<4;i++)",
                  "{",
                  "    limitValue = limitValue/2;",
                  "    limitValueChannel = limitValue/2;",
                  "    var limitObj = {};",
                  "    limitObj.Period=periodType[i];",
                  "    limitObj.Amount=limitValue.toString()+\".00\";",
                  "    limitObj.ExceedWithApproval=true;",
                  "    limitList.push(limitObj);",
                  "    ",
                  "    var limitObjChannel = {};",
                  "    limitObjChannel.Period=periodType[i];",
                  "    limitObjChannel.Amount=limitValueChannel.toString()+\".00\";",
                  "    limitObjChannel.ExceedWithApproval=true;",
                  "    limitListChannel.push(limitObjChannel);",
                  "}",
                  "",
                  "for(var i=0;i<res.length;i++)",
                  "{",
                  "    var entitlement = {};",
                  "    var limitArr = res[i].Limits.results;",
                  "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                  "    entitlement.Entitled = true;",
                  "    if(limitArr.length>0)",
                  "    {",
                  "        entitlement.Limits=limitList;",
                  "    }",
                  "    entitlementsList.push(entitlement);",
                  "    ",
                  "    var entitlementChannel = {};",
                  "    entitlementChannel.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                  "    entitlementChannel.Entitled = true;",
                  "    if(limitArr.length>0)",
                  "    {",
                  "        entitlementChannel.Limits=limitListChannel;",
                  "    }",
                  "    entitlementsListChannel.push(entitlementChannel);",
                  "    ",
                  "    var propArr = res[i].Properties.results;",
                  "    var childArr = res[i].Childrens.results;",
                  "    ",
                  "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                  "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                  "   for(var j=0;j<childArr.length;j++)",
                  "    {",
                  "        var entitlement = {};",
                  "        var childlimitArr = childArr[j].Limits.results;",
                  "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                  "        entitlement.Entitled = true;",
                  "        if(childlimitArr.length>0)",
                  "        {",
                  "            entitlement.Limits=limitList;",
                  "        }",
                  "        entitlementsList.push(entitlement);",
                  "        ",
                  "        var entitlementChannel = {};",
                  "        var childlimitArr = childArr[j].Limits.results;",
                  "        entitlementChannel.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                  "        entitlementChannel.Entitled = true;",
                  "        if(childlimitArr.length>0)",
                  "        {",
                  "            entitlementChannel.Limits=limitListChannel;",
                  "        }",
                  "        entitlementsListChannel.push(entitlementChannel);",
                  "        ",
                  "        ",
                  "        var childPropArr = childArr[j].Properties.results;",
                  "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                  "        ",
                  "        //if(childPropArr.length>0)",
                  "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                  "    }",
                  "}",
                  "",
                  "entObj.Entitlements = entitlementsList; ",
                  "postResponse.Feature = entObj;",
                  "",
                  "var jsonRequestBody = JSON.stringify(postResponse);",
                  "postman.setEnvironmentVariable('newReqWithLimit',jsonRequestBody);",
                  "",
                  "entObjChannel.Entitlements = entitlementsListChannel; ",
                  "postResponseChannel.Feature = entObjChannel;",
                  "",
                  "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                  "postman.setEnvironmentVariable('newReqWithLimitChannel',jsonRequestBodyChannel);",
                  "tests[\"\"+environment['featureName']+\" expand limit,properties verified.\"] = responseCode.code === 200;"
                ]
              }
            }
          ]
        },
        "parent": {
          "description": {
            "content": "",
            "type": "text/plain"
          },
          "id": "83980377-4f43-4add-86d9-8fe657ed87f9",
          "name": "CB Feature Template",
          "item": [
            {
              "id": "facca270-9bce-4e09-b05e-1c353e30afee",
              "name": "Login",
              "request": {
                "url": "{{env}}/cb/odata/ns/authenticationservice/SecureUsers?action=init",
                "method": "POST",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\r\n               \"Id\": \"\",\r\n\r\n               \"UserName\": \"primaryadmin\",\r\n\r\n               \"AppType\": \"Business\",\r\n\r\n               \"Password\": \"Pass1234\",\r\n\r\n               \"ChannelType\": \"Web\"\r\n\r\n}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Logged in as primaryadmin for iteration : \"+environment['featureName']] = responseCode.code === 201;",
                      "postman.setEnvironmentVariable(\"TokenKey\",postman.getResponseHeader('TokenKey'));",
                      "postman.setEnvironmentVariable(\"x-csrf-token\",postman.getResponseHeader('x-csrf-token'));"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setEnvironmentVariable('featureId',data['f_id']);",
                      "postman.setEnvironmentVariable('featureName',data['name']);"
                    ]
                  }
                }
              ]
            },
            {
              "id": "9de3b21f-024a-49cc-9839-e5066d111a15",
              "name": "get ProfileFeatures without assigning feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('reqPutOnlyFeature',jsonRequestBody);",
                      "",
                      "tests[\"\"+environment['featureName']+\" get without assigning.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98d5151b-ce91-4438-b2c0-bd1ce79e04aa",
              "name": "Add Business Profile Feature without entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{reqPutOnlyFeature}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//postman.setEnvironmentVariable(\"featureId\", jsonData.d.FeatureId);",
                      "",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"ProfileId and FeatureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === '601';",
                      "tests[\"\"+environment['featureName']+\" added without entitlements.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a08bdd26-855e-4cc6-9855-8348d9f58b26",
              "name": "get ProfileFeatures entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Childrens,Childrens/Properties",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsList = [];",
                      "var channelEntitlementsList = [];",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    entitlementsList.push(entitlement);",
                      "",
                      "    var channelEntitlement = {};",
                      "    channelEntitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    channelEntitlement.Entitled = false;",
                      "    channelEntitlementsList.push(channelEntitlement);",
                      " ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var channelEntitlement = {};",
                      "        channelEntitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        channelEntitlement.Entitled = false;",
                      "        channelEntitlementsList.push(channelEntitlement);",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "",
                      "postResponse.Feature = entObj;",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "entObjChannel.Entitlements = channelEntitlementsList; ",
                      "",
                      "",
                      "var jsonRequestBodyCross = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReq',jsonRequestBodyCross);",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqChannel',jsonRequestBodyChannel);",
                      "",
                      "tests[\"status code is 200 : OK for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "14162a48-9ac6-4b33-a5d3-ad43a28f7124",
              "name": "delete feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "DELETE",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"\"+environment['featureName']+\" deleted.\"] = responseCode.code === 204;",
                      ""
                    ]
                  }
                }
              ]
            },
            {
              "id": "26012c65-7033-47ac-ac7e-2ec7bc52f771",
              "name": "Add Business Profile Features with entitlements (Valid Set)",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReq}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"\"+environment['featureName']+\" added with entitlements entitled true.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "cd9bd5df-8eab-4579-aa7c-daf209871195",
              "name": "get ProfileFeatures with children and limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entitlementsList = [];",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsListChannel = [];",
                      "",
                      "var limitValue = 1600;",
                      "var limitList = [];",
                      "var limitListChannel = [];",
                      "var periodType = [\"Per Month\",\"Per Week\",\"Per Day\",\"Per Transaction\"];",
                      "",
                      "for(var i=0;i<4;i++)",
                      "{",
                      "    limitValue = limitValue/2;",
                      "    limitValueChannel = limitValue/2;",
                      "    var limitObj = {};",
                      "    limitObj.Period=periodType[i];",
                      "    limitObj.Amount=limitValue.toString()+\".00\";",
                      "    limitObj.ExceedWithApproval=true;",
                      "    limitList.push(limitObj);",
                      "    ",
                      "    var limitObjChannel = {};",
                      "    limitObjChannel.Period=periodType[i];",
                      "    limitObjChannel.Amount=limitValueChannel.toString()+\".00\";",
                      "    limitObjChannel.ExceedWithApproval=true;",
                      "    limitListChannel.push(limitObjChannel);",
                      "}",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    var limitArr = res[i].Limits.results;",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlement.Limits=limitList;",
                      "    }",
                      "    entitlementsList.push(entitlement);",
                      "    ",
                      "    var entitlementChannel = {};",
                      "    entitlementChannel.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlementChannel.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlementChannel.Limits=limitListChannel;",
                      "    }",
                      "    entitlementsListChannel.push(entitlementChannel);",
                      "    ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlement.Limits=limitList;",
                      "        }",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var entitlementChannel = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlementChannel.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlementChannel.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlementChannel.Limits=limitListChannel;",
                      "        }",
                      "        entitlementsListChannel.push(entitlementChannel);",
                      "        ",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "postResponse.Feature = entObj;",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReqWithLimit',jsonRequestBody);",
                      "",
                      "entObjChannel.Entitlements = entitlementsListChannel; ",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqWithLimitChannel',jsonRequestBodyChannel);",
                      "tests[\"\"+environment['featureName']+\" expand limit,properties verified.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98f04459-2775-4071-82f1-795c11b47882",
              "name": "Add Business Profile Features with entitlements (Valid Set) copy",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"Change entitlements to entitled false on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "825abed4-1099-4b44-8cf5-da9e59e2d1b6",
              "name": "get ProfileFeatures with children entitled false on channel Verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"Entitlements checked (false) on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "7977a171-5d7d-4234-b83e-2ad5d14b19da",
              "name": "Add Business Profile Features with entitlements with limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimit}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a296d108-e64d-41f4-bdc1-7eb93fd5f8de",
              "name": "get ProfileFeatures with children and limits verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is null\"] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === null;",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is null\"] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === null;",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "f453248f-5025-43a1-9f38-90d5ce5460d8",
              "name": "Add Business Profile Features with entitlements with limits on Channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimitChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "3d26e719-2cc3-4634-a785-7214bcd9a7e2",
              "name": "get ProfileFeatures with children and limits verify on channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"50.00\",\"100.00\",\"200.00\",\"400.00\"];",
                      "var maxlimitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is : \"+maxlimitArr[k]] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is :\"+maxlimitArr[k]] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "39cfc865-0c6e-4abc-b346-3c1a2fc389ab",
          "length": 13,
          "cycles": 1,
          "position": 6,
          "iteration": 0
        }
      },
      {
        "error": {
          "name": "AssertionFailure",
          "index": 0,
          "message": "Change entitlements to entitled false on channel for Account Management",
          "stack": "AssertionFailure: Expected tests[\"Change entitlements to entitled false on channel for Account Management\"] to be truth-like\n   at Object.eval test.js:1:8)",
          "checksum": "3dfb673b3cf114a1a6ce41f96f7a498b",
          "id": "6c3d6399-dff5-45c9-874b-d20d51c73076",
          "timestamp": 1480058090758,
          "stacktrace": [
            {
              "fileName": "test.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "98f04459-2775-4071-82f1-795c11b47882",
          "name": "Add Business Profile Features with entitlements (Valid Set) copy",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')",
            "method": "PUT",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "TokenKey",
                "value": "{{TokenKey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{{newReqChannel}}"
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//var jsonData = JSON.parse(responseBody);",
                  "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                  "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                  "",
                  "tests[\"Change entitlements to entitled false on channel for \"+environment['featureName']] = responseCode.code === 204;"
                ]
              }
            }
          ]
        },
        "parent": {
          "description": {
            "content": "",
            "type": "text/plain"
          },
          "id": "83980377-4f43-4add-86d9-8fe657ed87f9",
          "name": "CB Feature Template",
          "item": [
            {
              "id": "facca270-9bce-4e09-b05e-1c353e30afee",
              "name": "Login",
              "request": {
                "url": "{{env}}/cb/odata/ns/authenticationservice/SecureUsers?action=init",
                "method": "POST",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\r\n               \"Id\": \"\",\r\n\r\n               \"UserName\": \"primaryadmin\",\r\n\r\n               \"AppType\": \"Business\",\r\n\r\n               \"Password\": \"Pass1234\",\r\n\r\n               \"ChannelType\": \"Web\"\r\n\r\n}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Logged in as primaryadmin for iteration : \"+environment['featureName']] = responseCode.code === 201;",
                      "postman.setEnvironmentVariable(\"TokenKey\",postman.getResponseHeader('TokenKey'));",
                      "postman.setEnvironmentVariable(\"x-csrf-token\",postman.getResponseHeader('x-csrf-token'));"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setEnvironmentVariable('featureId',data['f_id']);",
                      "postman.setEnvironmentVariable('featureName',data['name']);"
                    ]
                  }
                }
              ]
            },
            {
              "id": "9de3b21f-024a-49cc-9839-e5066d111a15",
              "name": "get ProfileFeatures without assigning feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('reqPutOnlyFeature',jsonRequestBody);",
                      "",
                      "tests[\"\"+environment['featureName']+\" get without assigning.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98d5151b-ce91-4438-b2c0-bd1ce79e04aa",
              "name": "Add Business Profile Feature without entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{reqPutOnlyFeature}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//postman.setEnvironmentVariable(\"featureId\", jsonData.d.FeatureId);",
                      "",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"ProfileId and FeatureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === '601';",
                      "tests[\"\"+environment['featureName']+\" added without entitlements.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a08bdd26-855e-4cc6-9855-8348d9f58b26",
              "name": "get ProfileFeatures entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Childrens,Childrens/Properties",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsList = [];",
                      "var channelEntitlementsList = [];",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    entitlementsList.push(entitlement);",
                      "",
                      "    var channelEntitlement = {};",
                      "    channelEntitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    channelEntitlement.Entitled = false;",
                      "    channelEntitlementsList.push(channelEntitlement);",
                      " ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var channelEntitlement = {};",
                      "        channelEntitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        channelEntitlement.Entitled = false;",
                      "        channelEntitlementsList.push(channelEntitlement);",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "",
                      "postResponse.Feature = entObj;",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "entObjChannel.Entitlements = channelEntitlementsList; ",
                      "",
                      "",
                      "var jsonRequestBodyCross = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReq',jsonRequestBodyCross);",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqChannel',jsonRequestBodyChannel);",
                      "",
                      "tests[\"status code is 200 : OK for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "14162a48-9ac6-4b33-a5d3-ad43a28f7124",
              "name": "delete feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "DELETE",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"\"+environment['featureName']+\" deleted.\"] = responseCode.code === 204;",
                      ""
                    ]
                  }
                }
              ]
            },
            {
              "id": "26012c65-7033-47ac-ac7e-2ec7bc52f771",
              "name": "Add Business Profile Features with entitlements (Valid Set)",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReq}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"\"+environment['featureName']+\" added with entitlements entitled true.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "cd9bd5df-8eab-4579-aa7c-daf209871195",
              "name": "get ProfileFeatures with children and limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entitlementsList = [];",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsListChannel = [];",
                      "",
                      "var limitValue = 1600;",
                      "var limitList = [];",
                      "var limitListChannel = [];",
                      "var periodType = [\"Per Month\",\"Per Week\",\"Per Day\",\"Per Transaction\"];",
                      "",
                      "for(var i=0;i<4;i++)",
                      "{",
                      "    limitValue = limitValue/2;",
                      "    limitValueChannel = limitValue/2;",
                      "    var limitObj = {};",
                      "    limitObj.Period=periodType[i];",
                      "    limitObj.Amount=limitValue.toString()+\".00\";",
                      "    limitObj.ExceedWithApproval=true;",
                      "    limitList.push(limitObj);",
                      "    ",
                      "    var limitObjChannel = {};",
                      "    limitObjChannel.Period=periodType[i];",
                      "    limitObjChannel.Amount=limitValueChannel.toString()+\".00\";",
                      "    limitObjChannel.ExceedWithApproval=true;",
                      "    limitListChannel.push(limitObjChannel);",
                      "}",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    var limitArr = res[i].Limits.results;",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlement.Limits=limitList;",
                      "    }",
                      "    entitlementsList.push(entitlement);",
                      "    ",
                      "    var entitlementChannel = {};",
                      "    entitlementChannel.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlementChannel.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlementChannel.Limits=limitListChannel;",
                      "    }",
                      "    entitlementsListChannel.push(entitlementChannel);",
                      "    ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlement.Limits=limitList;",
                      "        }",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var entitlementChannel = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlementChannel.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlementChannel.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlementChannel.Limits=limitListChannel;",
                      "        }",
                      "        entitlementsListChannel.push(entitlementChannel);",
                      "        ",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "postResponse.Feature = entObj;",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReqWithLimit',jsonRequestBody);",
                      "",
                      "entObjChannel.Entitlements = entitlementsListChannel; ",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqWithLimitChannel',jsonRequestBodyChannel);",
                      "tests[\"\"+environment['featureName']+\" expand limit,properties verified.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98f04459-2775-4071-82f1-795c11b47882",
              "name": "Add Business Profile Features with entitlements (Valid Set) copy",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"Change entitlements to entitled false on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "825abed4-1099-4b44-8cf5-da9e59e2d1b6",
              "name": "get ProfileFeatures with children entitled false on channel Verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"Entitlements checked (false) on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "7977a171-5d7d-4234-b83e-2ad5d14b19da",
              "name": "Add Business Profile Features with entitlements with limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimit}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a296d108-e64d-41f4-bdc1-7eb93fd5f8de",
              "name": "get ProfileFeatures with children and limits verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is null\"] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === null;",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is null\"] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === null;",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "f453248f-5025-43a1-9f38-90d5ce5460d8",
              "name": "Add Business Profile Features with entitlements with limits on Channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimitChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "3d26e719-2cc3-4634-a785-7214bcd9a7e2",
              "name": "get ProfileFeatures with children and limits verify on channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"50.00\",\"100.00\",\"200.00\",\"400.00\"];",
                      "var maxlimitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is : \"+maxlimitArr[k]] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is :\"+maxlimitArr[k]] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "850cdfa7-f5ef-4b7f-bd68-b90116e2e151",
          "length": 13,
          "cycles": 1,
          "position": 7,
          "iteration": 0
        }
      },
      {
        "error": {
          "name": "TypeError",
          "message": "Cannot read property 'results' of undefined",
          "stack": "TypeError: Cannot read property 'results' of undefined\n    at Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34), <anonymous>:4:21)\n    at evalmachine.<anonymous>:293:23\n    at evalmachine.<anonymous>:299:2\n    at Object.exports.runInContext (vm.js:44:17)\n    at _.extend._run (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:156:16)\n    at _.extend.execute (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:121:14)\n    at PostmanCollectionRun.<anonymous> (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js:179:27)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1144:13\n    at replenish (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1018:21)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1022:13",
          "checksum": "e88f12520d5aec786d78913275b6ebdb",
          "id": "dca8603e-467d-4153-8311-c6b8fe428881",
          "timestamp": 1480058091529,
          "stacktrace": [
            {
              "fileName": "<anonymous>",
              "lineNumber": 4,
              "functionName": "Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
              "typeName": "Object",
              "methodName": "eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "evalmachine.<anonymous>",
              "lineNumber": 293,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "evalmachine.<anonymous>",
              "lineNumber": 299,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 2,
              "native": false
            },
            {
              "fileName": "vm.js",
              "lineNumber": 44,
              "functionName": "Object.exports.runInContext",
              "typeName": "Object",
              "methodName": "exports.runInContext",
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
              "lineNumber": 156,
              "functionName": "_.extend._run",
              "typeName": "_",
              "methodName": "extend._run",
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
              "lineNumber": 121,
              "functionName": "_.extend.execute",
              "typeName": "_",
              "methodName": "extend.execute",
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js",
              "lineNumber": 179,
              "functionName": "",
              "typeName": "PostmanCollectionRun",
              "methodName": null,
              "columnNumber": 27,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 1144,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 1018,
              "functionName": "replenish",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 1022,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "test-script:2:21",
        "source": {
          "id": "825abed4-1099-4b44-8cf5-da9e59e2d1b6",
          "name": "get ProfileFeatures with children entitled false on channel Verify",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
            "method": "GET",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "TokenKey",
                "value": "{{TokenKey}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var res = jsonData.d.results;",
                  "",
                  "for(var i=0;i<res.length;i++)",
                  "{",
                  "    var propArr = res[i].Properties.results;",
                  "    var childArr = res[i].Childrens.results;",
                  "    ",
                  "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                  "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                  "   for(var j=0;j<childArr.length;j++)",
                  "    {",
                  "        var childPropArr = childArr[j].Properties.results;",
                  "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                  "        ",
                  "        //if(childPropArr.length>0)",
                  "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                  "    }",
                  "}",
                  "tests[\"Entitlements checked (false) on channel for \"+environment['featureName']] = responseCode.code === 200;"
                ]
              }
            }
          ]
        },
        "parent": {
          "description": {
            "content": "",
            "type": "text/plain"
          },
          "id": "83980377-4f43-4add-86d9-8fe657ed87f9",
          "name": "CB Feature Template",
          "item": [
            {
              "id": "facca270-9bce-4e09-b05e-1c353e30afee",
              "name": "Login",
              "request": {
                "url": "{{env}}/cb/odata/ns/authenticationservice/SecureUsers?action=init",
                "method": "POST",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\r\n               \"Id\": \"\",\r\n\r\n               \"UserName\": \"primaryadmin\",\r\n\r\n               \"AppType\": \"Business\",\r\n\r\n               \"Password\": \"Pass1234\",\r\n\r\n               \"ChannelType\": \"Web\"\r\n\r\n}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Logged in as primaryadmin for iteration : \"+environment['featureName']] = responseCode.code === 201;",
                      "postman.setEnvironmentVariable(\"TokenKey\",postman.getResponseHeader('TokenKey'));",
                      "postman.setEnvironmentVariable(\"x-csrf-token\",postman.getResponseHeader('x-csrf-token'));"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setEnvironmentVariable('featureId',data['f_id']);",
                      "postman.setEnvironmentVariable('featureName',data['name']);"
                    ]
                  }
                }
              ]
            },
            {
              "id": "9de3b21f-024a-49cc-9839-e5066d111a15",
              "name": "get ProfileFeatures without assigning feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('reqPutOnlyFeature',jsonRequestBody);",
                      "",
                      "tests[\"\"+environment['featureName']+\" get without assigning.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98d5151b-ce91-4438-b2c0-bd1ce79e04aa",
              "name": "Add Business Profile Feature without entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{reqPutOnlyFeature}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//postman.setEnvironmentVariable(\"featureId\", jsonData.d.FeatureId);",
                      "",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"ProfileId and FeatureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === '601';",
                      "tests[\"\"+environment['featureName']+\" added without entitlements.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a08bdd26-855e-4cc6-9855-8348d9f58b26",
              "name": "get ProfileFeatures entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Childrens,Childrens/Properties",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsList = [];",
                      "var channelEntitlementsList = [];",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    entitlementsList.push(entitlement);",
                      "",
                      "    var channelEntitlement = {};",
                      "    channelEntitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    channelEntitlement.Entitled = false;",
                      "    channelEntitlementsList.push(channelEntitlement);",
                      " ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var channelEntitlement = {};",
                      "        channelEntitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        channelEntitlement.Entitled = false;",
                      "        channelEntitlementsList.push(channelEntitlement);",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "",
                      "postResponse.Feature = entObj;",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "entObjChannel.Entitlements = channelEntitlementsList; ",
                      "",
                      "",
                      "var jsonRequestBodyCross = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReq',jsonRequestBodyCross);",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqChannel',jsonRequestBodyChannel);",
                      "",
                      "tests[\"status code is 200 : OK for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "14162a48-9ac6-4b33-a5d3-ad43a28f7124",
              "name": "delete feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "DELETE",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"\"+environment['featureName']+\" deleted.\"] = responseCode.code === 204;",
                      ""
                    ]
                  }
                }
              ]
            },
            {
              "id": "26012c65-7033-47ac-ac7e-2ec7bc52f771",
              "name": "Add Business Profile Features with entitlements (Valid Set)",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReq}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"\"+environment['featureName']+\" added with entitlements entitled true.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "cd9bd5df-8eab-4579-aa7c-daf209871195",
              "name": "get ProfileFeatures with children and limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entitlementsList = [];",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsListChannel = [];",
                      "",
                      "var limitValue = 1600;",
                      "var limitList = [];",
                      "var limitListChannel = [];",
                      "var periodType = [\"Per Month\",\"Per Week\",\"Per Day\",\"Per Transaction\"];",
                      "",
                      "for(var i=0;i<4;i++)",
                      "{",
                      "    limitValue = limitValue/2;",
                      "    limitValueChannel = limitValue/2;",
                      "    var limitObj = {};",
                      "    limitObj.Period=periodType[i];",
                      "    limitObj.Amount=limitValue.toString()+\".00\";",
                      "    limitObj.ExceedWithApproval=true;",
                      "    limitList.push(limitObj);",
                      "    ",
                      "    var limitObjChannel = {};",
                      "    limitObjChannel.Period=periodType[i];",
                      "    limitObjChannel.Amount=limitValueChannel.toString()+\".00\";",
                      "    limitObjChannel.ExceedWithApproval=true;",
                      "    limitListChannel.push(limitObjChannel);",
                      "}",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    var limitArr = res[i].Limits.results;",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlement.Limits=limitList;",
                      "    }",
                      "    entitlementsList.push(entitlement);",
                      "    ",
                      "    var entitlementChannel = {};",
                      "    entitlementChannel.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlementChannel.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlementChannel.Limits=limitListChannel;",
                      "    }",
                      "    entitlementsListChannel.push(entitlementChannel);",
                      "    ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlement.Limits=limitList;",
                      "        }",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var entitlementChannel = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlementChannel.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlementChannel.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlementChannel.Limits=limitListChannel;",
                      "        }",
                      "        entitlementsListChannel.push(entitlementChannel);",
                      "        ",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "postResponse.Feature = entObj;",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReqWithLimit',jsonRequestBody);",
                      "",
                      "entObjChannel.Entitlements = entitlementsListChannel; ",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqWithLimitChannel',jsonRequestBodyChannel);",
                      "tests[\"\"+environment['featureName']+\" expand limit,properties verified.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98f04459-2775-4071-82f1-795c11b47882",
              "name": "Add Business Profile Features with entitlements (Valid Set) copy",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"Change entitlements to entitled false on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "825abed4-1099-4b44-8cf5-da9e59e2d1b6",
              "name": "get ProfileFeatures with children entitled false on channel Verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"Entitlements checked (false) on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "7977a171-5d7d-4234-b83e-2ad5d14b19da",
              "name": "Add Business Profile Features with entitlements with limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimit}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a296d108-e64d-41f4-bdc1-7eb93fd5f8de",
              "name": "get ProfileFeatures with children and limits verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is null\"] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === null;",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is null\"] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === null;",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "f453248f-5025-43a1-9f38-90d5ce5460d8",
              "name": "Add Business Profile Features with entitlements with limits on Channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimitChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "3d26e719-2cc3-4634-a785-7214bcd9a7e2",
              "name": "get ProfileFeatures with children and limits verify on channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"50.00\",\"100.00\",\"200.00\",\"400.00\"];",
                      "var maxlimitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is : \"+maxlimitArr[k]] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is :\"+maxlimitArr[k]] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "198fb8c9-7204-4880-9a77-9c0d81e09eff",
          "length": 13,
          "cycles": 1,
          "position": 8,
          "iteration": 0
        }
      },
      {
        "error": {
          "name": "AssertionFailure",
          "index": 0,
          "message": "set limits for Account Management",
          "stack": "AssertionFailure: Expected tests[\"set limits for Account Management\"] to be truth-like\n   at Object.eval test.js:1:10)",
          "checksum": "0b8d506f82832b78447911ad88dce667",
          "id": "e01f57ff-1955-4b31-8308-1c12c3aec74f",
          "timestamp": 1480058092287,
          "stacktrace": [
            {
              "fileName": "test.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "7977a171-5d7d-4234-b83e-2ad5d14b19da",
          "name": "Add Business Profile Features with entitlements with limits",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
            "method": "PUT",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "TokenKey",
                "value": "{{TokenKey}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{{newReqWithLimit}}"
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//var jsonData = JSON.parse(responseBody);",
                  "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                  "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                  "",
                  "tests[\"set limits for \"+environment['featureName']] = responseCode.code === 204;"
                ]
              }
            }
          ]
        },
        "parent": {
          "description": {
            "content": "",
            "type": "text/plain"
          },
          "id": "83980377-4f43-4add-86d9-8fe657ed87f9",
          "name": "CB Feature Template",
          "item": [
            {
              "id": "facca270-9bce-4e09-b05e-1c353e30afee",
              "name": "Login",
              "request": {
                "url": "{{env}}/cb/odata/ns/authenticationservice/SecureUsers?action=init",
                "method": "POST",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\r\n               \"Id\": \"\",\r\n\r\n               \"UserName\": \"primaryadmin\",\r\n\r\n               \"AppType\": \"Business\",\r\n\r\n               \"Password\": \"Pass1234\",\r\n\r\n               \"ChannelType\": \"Web\"\r\n\r\n}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Logged in as primaryadmin for iteration : \"+environment['featureName']] = responseCode.code === 201;",
                      "postman.setEnvironmentVariable(\"TokenKey\",postman.getResponseHeader('TokenKey'));",
                      "postman.setEnvironmentVariable(\"x-csrf-token\",postman.getResponseHeader('x-csrf-token'));"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setEnvironmentVariable('featureId',data['f_id']);",
                      "postman.setEnvironmentVariable('featureName',data['name']);"
                    ]
                  }
                }
              ]
            },
            {
              "id": "9de3b21f-024a-49cc-9839-e5066d111a15",
              "name": "get ProfileFeatures without assigning feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('reqPutOnlyFeature',jsonRequestBody);",
                      "",
                      "tests[\"\"+environment['featureName']+\" get without assigning.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98d5151b-ce91-4438-b2c0-bd1ce79e04aa",
              "name": "Add Business Profile Feature without entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{reqPutOnlyFeature}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//postman.setEnvironmentVariable(\"featureId\", jsonData.d.FeatureId);",
                      "",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"ProfileId and FeatureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === '601';",
                      "tests[\"\"+environment['featureName']+\" added without entitlements.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a08bdd26-855e-4cc6-9855-8348d9f58b26",
              "name": "get ProfileFeatures entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Childrens,Childrens/Properties",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsList = [];",
                      "var channelEntitlementsList = [];",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    entitlementsList.push(entitlement);",
                      "",
                      "    var channelEntitlement = {};",
                      "    channelEntitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    channelEntitlement.Entitled = false;",
                      "    channelEntitlementsList.push(channelEntitlement);",
                      " ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var channelEntitlement = {};",
                      "        channelEntitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        channelEntitlement.Entitled = false;",
                      "        channelEntitlementsList.push(channelEntitlement);",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "",
                      "postResponse.Feature = entObj;",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "entObjChannel.Entitlements = channelEntitlementsList; ",
                      "",
                      "",
                      "var jsonRequestBodyCross = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReq',jsonRequestBodyCross);",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqChannel',jsonRequestBodyChannel);",
                      "",
                      "tests[\"status code is 200 : OK for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "14162a48-9ac6-4b33-a5d3-ad43a28f7124",
              "name": "delete feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "DELETE",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"\"+environment['featureName']+\" deleted.\"] = responseCode.code === 204;",
                      ""
                    ]
                  }
                }
              ]
            },
            {
              "id": "26012c65-7033-47ac-ac7e-2ec7bc52f771",
              "name": "Add Business Profile Features with entitlements (Valid Set)",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReq}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"\"+environment['featureName']+\" added with entitlements entitled true.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "cd9bd5df-8eab-4579-aa7c-daf209871195",
              "name": "get ProfileFeatures with children and limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entitlementsList = [];",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsListChannel = [];",
                      "",
                      "var limitValue = 1600;",
                      "var limitList = [];",
                      "var limitListChannel = [];",
                      "var periodType = [\"Per Month\",\"Per Week\",\"Per Day\",\"Per Transaction\"];",
                      "",
                      "for(var i=0;i<4;i++)",
                      "{",
                      "    limitValue = limitValue/2;",
                      "    limitValueChannel = limitValue/2;",
                      "    var limitObj = {};",
                      "    limitObj.Period=periodType[i];",
                      "    limitObj.Amount=limitValue.toString()+\".00\";",
                      "    limitObj.ExceedWithApproval=true;",
                      "    limitList.push(limitObj);",
                      "    ",
                      "    var limitObjChannel = {};",
                      "    limitObjChannel.Period=periodType[i];",
                      "    limitObjChannel.Amount=limitValueChannel.toString()+\".00\";",
                      "    limitObjChannel.ExceedWithApproval=true;",
                      "    limitListChannel.push(limitObjChannel);",
                      "}",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    var limitArr = res[i].Limits.results;",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlement.Limits=limitList;",
                      "    }",
                      "    entitlementsList.push(entitlement);",
                      "    ",
                      "    var entitlementChannel = {};",
                      "    entitlementChannel.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlementChannel.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlementChannel.Limits=limitListChannel;",
                      "    }",
                      "    entitlementsListChannel.push(entitlementChannel);",
                      "    ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlement.Limits=limitList;",
                      "        }",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var entitlementChannel = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlementChannel.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlementChannel.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlementChannel.Limits=limitListChannel;",
                      "        }",
                      "        entitlementsListChannel.push(entitlementChannel);",
                      "        ",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "postResponse.Feature = entObj;",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReqWithLimit',jsonRequestBody);",
                      "",
                      "entObjChannel.Entitlements = entitlementsListChannel; ",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqWithLimitChannel',jsonRequestBodyChannel);",
                      "tests[\"\"+environment['featureName']+\" expand limit,properties verified.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98f04459-2775-4071-82f1-795c11b47882",
              "name": "Add Business Profile Features with entitlements (Valid Set) copy",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"Change entitlements to entitled false on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "825abed4-1099-4b44-8cf5-da9e59e2d1b6",
              "name": "get ProfileFeatures with children entitled false on channel Verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"Entitlements checked (false) on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "7977a171-5d7d-4234-b83e-2ad5d14b19da",
              "name": "Add Business Profile Features with entitlements with limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimit}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a296d108-e64d-41f4-bdc1-7eb93fd5f8de",
              "name": "get ProfileFeatures with children and limits verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is null\"] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === null;",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is null\"] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === null;",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "f453248f-5025-43a1-9f38-90d5ce5460d8",
              "name": "Add Business Profile Features with entitlements with limits on Channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimitChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "3d26e719-2cc3-4634-a785-7214bcd9a7e2",
              "name": "get ProfileFeatures with children and limits verify on channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"50.00\",\"100.00\",\"200.00\",\"400.00\"];",
                      "var maxlimitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is : \"+maxlimitArr[k]] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is :\"+maxlimitArr[k]] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "7419cad1-39e7-485e-9d93-f2c8216a67b3",
          "length": 13,
          "cycles": 1,
          "position": 9,
          "iteration": 0
        }
      },
      {
        "error": {
          "name": "TypeError",
          "message": "Cannot read property 'results' of undefined",
          "stack": "TypeError: Cannot read property 'results' of undefined\n    at Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34), <anonymous>:4:21)\n    at evalmachine.<anonymous>:293:23\n    at evalmachine.<anonymous>:299:2\n    at Object.exports.runInContext (vm.js:44:17)\n    at _.extend._run (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:156:16)\n    at _.extend.execute (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:121:14)\n    at PostmanCollectionRun.<anonymous> (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js:179:27)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1144:13\n    at replenish (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1018:21)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1022:13",
          "checksum": "e88f12520d5aec786d78913275b6ebdb",
          "id": "66fa18b0-5458-4406-aa2c-56c179b1a52f",
          "timestamp": 1480058093040,
          "stacktrace": [
            {
              "fileName": "<anonymous>",
              "lineNumber": 4,
              "functionName": "Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
              "typeName": "Object",
              "methodName": "eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "evalmachine.<anonymous>",
              "lineNumber": 293,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "evalmachine.<anonymous>",
              "lineNumber": 299,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 2,
              "native": false
            },
            {
              "fileName": "vm.js",
              "lineNumber": 44,
              "functionName": "Object.exports.runInContext",
              "typeName": "Object",
              "methodName": "exports.runInContext",
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
              "lineNumber": 156,
              "functionName": "_.extend._run",
              "typeName": "_",
              "methodName": "extend._run",
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
              "lineNumber": 121,
              "functionName": "_.extend.execute",
              "typeName": "_",
              "methodName": "extend.execute",
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js",
              "lineNumber": 179,
              "functionName": "",
              "typeName": "PostmanCollectionRun",
              "methodName": null,
              "columnNumber": 27,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 1144,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 1018,
              "functionName": "replenish",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 1022,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "test-script:2:21",
        "source": {
          "id": "a296d108-e64d-41f4-bdc1-7eb93fd5f8de",
          "name": "get ProfileFeatures with children and limits verify",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
            "method": "GET",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "TokenKey",
                "value": "{{TokenKey}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var res = jsonData.d.results;",
                  "var limitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                  "for(var i=0;i<res.length;i++)",
                  "{",
                  "    var propArr = res[i].Properties.results;",
                  "    var childArr = res[i].Childrens.results;",
                  "    var parentLimit = res[i].Limits.results;",
                  "    //if(parentLimit.length>0)",
                  "    {",
                  "        for(var k=0;k<parentLimit.length;k++)",
                  "        {",
                  "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is null\"] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === null;",
                  "        }",
                  "    }",
                  "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                  "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                  "    for(var j=0;j<childArr.length;j++)",
                  "    {",
                  "        var childLimit = childArr[j].Limits.results;",
                  "    //if(childLimit.length>0)",
                  "        {",
                  "        for(var k=0;k<childLimit.length;k++)",
                  "            {",
                  "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is null\"] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === null;",
                  "            }",
                  "        }",
                  "        var childPropArr = childArr[j].Properties.results;",
                  "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                  "        //if(childPropArr.length>0)",
                  "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                  "    }",
                  "}",
                  "tests[\"check entitlements with limit for \"+environment['featureName']] = responseCode.code === 200;"
                ]
              }
            }
          ]
        },
        "parent": {
          "description": {
            "content": "",
            "type": "text/plain"
          },
          "id": "83980377-4f43-4add-86d9-8fe657ed87f9",
          "name": "CB Feature Template",
          "item": [
            {
              "id": "facca270-9bce-4e09-b05e-1c353e30afee",
              "name": "Login",
              "request": {
                "url": "{{env}}/cb/odata/ns/authenticationservice/SecureUsers?action=init",
                "method": "POST",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\r\n               \"Id\": \"\",\r\n\r\n               \"UserName\": \"primaryadmin\",\r\n\r\n               \"AppType\": \"Business\",\r\n\r\n               \"Password\": \"Pass1234\",\r\n\r\n               \"ChannelType\": \"Web\"\r\n\r\n}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Logged in as primaryadmin for iteration : \"+environment['featureName']] = responseCode.code === 201;",
                      "postman.setEnvironmentVariable(\"TokenKey\",postman.getResponseHeader('TokenKey'));",
                      "postman.setEnvironmentVariable(\"x-csrf-token\",postman.getResponseHeader('x-csrf-token'));"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setEnvironmentVariable('featureId',data['f_id']);",
                      "postman.setEnvironmentVariable('featureName',data['name']);"
                    ]
                  }
                }
              ]
            },
            {
              "id": "9de3b21f-024a-49cc-9839-e5066d111a15",
              "name": "get ProfileFeatures without assigning feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('reqPutOnlyFeature',jsonRequestBody);",
                      "",
                      "tests[\"\"+environment['featureName']+\" get without assigning.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98d5151b-ce91-4438-b2c0-bd1ce79e04aa",
              "name": "Add Business Profile Feature without entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{reqPutOnlyFeature}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//postman.setEnvironmentVariable(\"featureId\", jsonData.d.FeatureId);",
                      "",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"ProfileId and FeatureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === '601';",
                      "tests[\"\"+environment['featureName']+\" added without entitlements.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a08bdd26-855e-4cc6-9855-8348d9f58b26",
              "name": "get ProfileFeatures entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Childrens,Childrens/Properties",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsList = [];",
                      "var channelEntitlementsList = [];",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    entitlementsList.push(entitlement);",
                      "",
                      "    var channelEntitlement = {};",
                      "    channelEntitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    channelEntitlement.Entitled = false;",
                      "    channelEntitlementsList.push(channelEntitlement);",
                      " ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var channelEntitlement = {};",
                      "        channelEntitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        channelEntitlement.Entitled = false;",
                      "        channelEntitlementsList.push(channelEntitlement);",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "",
                      "postResponse.Feature = entObj;",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "entObjChannel.Entitlements = channelEntitlementsList; ",
                      "",
                      "",
                      "var jsonRequestBodyCross = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReq',jsonRequestBodyCross);",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqChannel',jsonRequestBodyChannel);",
                      "",
                      "tests[\"status code is 200 : OK for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "14162a48-9ac6-4b33-a5d3-ad43a28f7124",
              "name": "delete feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "DELETE",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"\"+environment['featureName']+\" deleted.\"] = responseCode.code === 204;",
                      ""
                    ]
                  }
                }
              ]
            },
            {
              "id": "26012c65-7033-47ac-ac7e-2ec7bc52f771",
              "name": "Add Business Profile Features with entitlements (Valid Set)",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReq}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"\"+environment['featureName']+\" added with entitlements entitled true.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "cd9bd5df-8eab-4579-aa7c-daf209871195",
              "name": "get ProfileFeatures with children and limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entitlementsList = [];",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsListChannel = [];",
                      "",
                      "var limitValue = 1600;",
                      "var limitList = [];",
                      "var limitListChannel = [];",
                      "var periodType = [\"Per Month\",\"Per Week\",\"Per Day\",\"Per Transaction\"];",
                      "",
                      "for(var i=0;i<4;i++)",
                      "{",
                      "    limitValue = limitValue/2;",
                      "    limitValueChannel = limitValue/2;",
                      "    var limitObj = {};",
                      "    limitObj.Period=periodType[i];",
                      "    limitObj.Amount=limitValue.toString()+\".00\";",
                      "    limitObj.ExceedWithApproval=true;",
                      "    limitList.push(limitObj);",
                      "    ",
                      "    var limitObjChannel = {};",
                      "    limitObjChannel.Period=periodType[i];",
                      "    limitObjChannel.Amount=limitValueChannel.toString()+\".00\";",
                      "    limitObjChannel.ExceedWithApproval=true;",
                      "    limitListChannel.push(limitObjChannel);",
                      "}",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    var limitArr = res[i].Limits.results;",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlement.Limits=limitList;",
                      "    }",
                      "    entitlementsList.push(entitlement);",
                      "    ",
                      "    var entitlementChannel = {};",
                      "    entitlementChannel.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlementChannel.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlementChannel.Limits=limitListChannel;",
                      "    }",
                      "    entitlementsListChannel.push(entitlementChannel);",
                      "    ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlement.Limits=limitList;",
                      "        }",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var entitlementChannel = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlementChannel.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlementChannel.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlementChannel.Limits=limitListChannel;",
                      "        }",
                      "        entitlementsListChannel.push(entitlementChannel);",
                      "        ",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "postResponse.Feature = entObj;",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReqWithLimit',jsonRequestBody);",
                      "",
                      "entObjChannel.Entitlements = entitlementsListChannel; ",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqWithLimitChannel',jsonRequestBodyChannel);",
                      "tests[\"\"+environment['featureName']+\" expand limit,properties verified.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98f04459-2775-4071-82f1-795c11b47882",
              "name": "Add Business Profile Features with entitlements (Valid Set) copy",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"Change entitlements to entitled false on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "825abed4-1099-4b44-8cf5-da9e59e2d1b6",
              "name": "get ProfileFeatures with children entitled false on channel Verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"Entitlements checked (false) on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "7977a171-5d7d-4234-b83e-2ad5d14b19da",
              "name": "Add Business Profile Features with entitlements with limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimit}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a296d108-e64d-41f4-bdc1-7eb93fd5f8de",
              "name": "get ProfileFeatures with children and limits verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is null\"] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === null;",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is null\"] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === null;",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "f453248f-5025-43a1-9f38-90d5ce5460d8",
              "name": "Add Business Profile Features with entitlements with limits on Channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimitChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "3d26e719-2cc3-4634-a785-7214bcd9a7e2",
              "name": "get ProfileFeatures with children and limits verify on channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"50.00\",\"100.00\",\"200.00\",\"400.00\"];",
                      "var maxlimitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is : \"+maxlimitArr[k]] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is :\"+maxlimitArr[k]] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "5ea2caf7-1077-4674-8c89-040176f16272",
          "length": 13,
          "cycles": 1,
          "position": 10,
          "iteration": 0
        }
      },
      {
        "error": {
          "name": "AssertionFailure",
          "index": 0,
          "message": "set limits on channel for Account Management",
          "stack": "AssertionFailure: Expected tests[\"set limits on channel for Account Management\"] to be truth-like\n   at Object.eval test.js:1:12)",
          "checksum": "27cadcc01374583605a6718e13e6ab24",
          "id": "e5ce3c32-52eb-4362-8175-ef0a182cdfe8",
          "timestamp": 1480058093758,
          "stacktrace": [
            {
              "fileName": "test.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "f453248f-5025-43a1-9f38-90d5ce5460d8",
          "name": "Add Business Profile Features with entitlements with limits on Channel",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
            "method": "PUT",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{{newReqWithLimitChannel}}"
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "//var jsonData = JSON.parse(responseBody);",
                  "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                  "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                  "",
                  "tests[\"set limits on channel for \"+environment['featureName']] = responseCode.code === 204;"
                ]
              }
            }
          ]
        },
        "parent": {
          "description": {
            "content": "",
            "type": "text/plain"
          },
          "id": "83980377-4f43-4add-86d9-8fe657ed87f9",
          "name": "CB Feature Template",
          "item": [
            {
              "id": "facca270-9bce-4e09-b05e-1c353e30afee",
              "name": "Login",
              "request": {
                "url": "{{env}}/cb/odata/ns/authenticationservice/SecureUsers?action=init",
                "method": "POST",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\r\n               \"Id\": \"\",\r\n\r\n               \"UserName\": \"primaryadmin\",\r\n\r\n               \"AppType\": \"Business\",\r\n\r\n               \"Password\": \"Pass1234\",\r\n\r\n               \"ChannelType\": \"Web\"\r\n\r\n}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Logged in as primaryadmin for iteration : \"+environment['featureName']] = responseCode.code === 201;",
                      "postman.setEnvironmentVariable(\"TokenKey\",postman.getResponseHeader('TokenKey'));",
                      "postman.setEnvironmentVariable(\"x-csrf-token\",postman.getResponseHeader('x-csrf-token'));"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setEnvironmentVariable('featureId',data['f_id']);",
                      "postman.setEnvironmentVariable('featureName',data['name']);"
                    ]
                  }
                }
              ]
            },
            {
              "id": "9de3b21f-024a-49cc-9839-e5066d111a15",
              "name": "get ProfileFeatures without assigning feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('reqPutOnlyFeature',jsonRequestBody);",
                      "",
                      "tests[\"\"+environment['featureName']+\" get without assigning.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98d5151b-ce91-4438-b2c0-bd1ce79e04aa",
              "name": "Add Business Profile Feature without entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{reqPutOnlyFeature}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//postman.setEnvironmentVariable(\"featureId\", jsonData.d.FeatureId);",
                      "",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"ProfileId and FeatureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === '601';",
                      "tests[\"\"+environment['featureName']+\" added without entitlements.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a08bdd26-855e-4cc6-9855-8348d9f58b26",
              "name": "get ProfileFeatures entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Childrens,Childrens/Properties",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsList = [];",
                      "var channelEntitlementsList = [];",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    entitlementsList.push(entitlement);",
                      "",
                      "    var channelEntitlement = {};",
                      "    channelEntitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    channelEntitlement.Entitled = false;",
                      "    channelEntitlementsList.push(channelEntitlement);",
                      " ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var channelEntitlement = {};",
                      "        channelEntitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        channelEntitlement.Entitled = false;",
                      "        channelEntitlementsList.push(channelEntitlement);",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "",
                      "postResponse.Feature = entObj;",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "entObjChannel.Entitlements = channelEntitlementsList; ",
                      "",
                      "",
                      "var jsonRequestBodyCross = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReq',jsonRequestBodyCross);",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqChannel',jsonRequestBodyChannel);",
                      "",
                      "tests[\"status code is 200 : OK for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "14162a48-9ac6-4b33-a5d3-ad43a28f7124",
              "name": "delete feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "DELETE",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"\"+environment['featureName']+\" deleted.\"] = responseCode.code === 204;",
                      ""
                    ]
                  }
                }
              ]
            },
            {
              "id": "26012c65-7033-47ac-ac7e-2ec7bc52f771",
              "name": "Add Business Profile Features with entitlements (Valid Set)",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReq}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"\"+environment['featureName']+\" added with entitlements entitled true.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "cd9bd5df-8eab-4579-aa7c-daf209871195",
              "name": "get ProfileFeatures with children and limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entitlementsList = [];",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsListChannel = [];",
                      "",
                      "var limitValue = 1600;",
                      "var limitList = [];",
                      "var limitListChannel = [];",
                      "var periodType = [\"Per Month\",\"Per Week\",\"Per Day\",\"Per Transaction\"];",
                      "",
                      "for(var i=0;i<4;i++)",
                      "{",
                      "    limitValue = limitValue/2;",
                      "    limitValueChannel = limitValue/2;",
                      "    var limitObj = {};",
                      "    limitObj.Period=periodType[i];",
                      "    limitObj.Amount=limitValue.toString()+\".00\";",
                      "    limitObj.ExceedWithApproval=true;",
                      "    limitList.push(limitObj);",
                      "    ",
                      "    var limitObjChannel = {};",
                      "    limitObjChannel.Period=periodType[i];",
                      "    limitObjChannel.Amount=limitValueChannel.toString()+\".00\";",
                      "    limitObjChannel.ExceedWithApproval=true;",
                      "    limitListChannel.push(limitObjChannel);",
                      "}",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    var limitArr = res[i].Limits.results;",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlement.Limits=limitList;",
                      "    }",
                      "    entitlementsList.push(entitlement);",
                      "    ",
                      "    var entitlementChannel = {};",
                      "    entitlementChannel.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlementChannel.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlementChannel.Limits=limitListChannel;",
                      "    }",
                      "    entitlementsListChannel.push(entitlementChannel);",
                      "    ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlement.Limits=limitList;",
                      "        }",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var entitlementChannel = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlementChannel.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlementChannel.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlementChannel.Limits=limitListChannel;",
                      "        }",
                      "        entitlementsListChannel.push(entitlementChannel);",
                      "        ",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "postResponse.Feature = entObj;",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReqWithLimit',jsonRequestBody);",
                      "",
                      "entObjChannel.Entitlements = entitlementsListChannel; ",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqWithLimitChannel',jsonRequestBodyChannel);",
                      "tests[\"\"+environment['featureName']+\" expand limit,properties verified.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98f04459-2775-4071-82f1-795c11b47882",
              "name": "Add Business Profile Features with entitlements (Valid Set) copy",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"Change entitlements to entitled false on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "825abed4-1099-4b44-8cf5-da9e59e2d1b6",
              "name": "get ProfileFeatures with children entitled false on channel Verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"Entitlements checked (false) on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "7977a171-5d7d-4234-b83e-2ad5d14b19da",
              "name": "Add Business Profile Features with entitlements with limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimit}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a296d108-e64d-41f4-bdc1-7eb93fd5f8de",
              "name": "get ProfileFeatures with children and limits verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is null\"] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === null;",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is null\"] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === null;",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "f453248f-5025-43a1-9f38-90d5ce5460d8",
              "name": "Add Business Profile Features with entitlements with limits on Channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimitChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "3d26e719-2cc3-4634-a785-7214bcd9a7e2",
              "name": "get ProfileFeatures with children and limits verify on channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"50.00\",\"100.00\",\"200.00\",\"400.00\"];",
                      "var maxlimitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is : \"+maxlimitArr[k]] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is :\"+maxlimitArr[k]] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "6385b732-5b9b-4624-be53-ca32c6105b04",
          "length": 13,
          "cycles": 1,
          "position": 11,
          "iteration": 0
        }
      },
      {
        "error": {
          "name": "TypeError",
          "message": "Cannot read property 'results' of undefined",
          "stack": "TypeError: Cannot read property 'results' of undefined\n    at Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34), <anonymous>:4:21)\n    at evalmachine.<anonymous>:293:23\n    at evalmachine.<anonymous>:299:2\n    at Object.exports.runInContext (vm.js:44:17)\n    at _.extend._run (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:156:16)\n    at _.extend.execute (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js:121:14)\n    at PostmanCollectionRun.<anonymous> (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js:179:27)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1144:13\n    at replenish (C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1018:21)\n    at C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js:1022:13",
          "checksum": "e88f12520d5aec786d78913275b6ebdb",
          "id": "6a857b57-cb98-4cb8-a22b-4e2c1867532e",
          "timestamp": 1480058095003,
          "stacktrace": [
            {
              "fileName": "<anonymous>",
              "lineNumber": 4,
              "functionName": "Object.eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
              "typeName": "Object",
              "methodName": "eval (eval at <anonymous> (evalmachine.<anonymous>:284:34),",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "evalmachine.<anonymous>",
              "lineNumber": 293,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 23,
              "native": false
            },
            {
              "fileName": "evalmachine.<anonymous>",
              "lineNumber": 299,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 2,
              "native": false
            },
            {
              "fileName": "vm.js",
              "lineNumber": 44,
              "functionName": "Object.exports.runInContext",
              "typeName": "Object",
              "methodName": "exports.runInContext",
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
              "lineNumber": 156,
              "functionName": "_.extend._run",
              "typeName": "_",
              "methodName": "extend._run",
              "columnNumber": 16,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\uvm\\host.js",
              "lineNumber": 121,
              "functionName": "_.extend.execute",
              "typeName": "_",
              "methodName": "extend.execute",
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\lib\\runner\\extensions\\event.command.js",
              "lineNumber": 179,
              "functionName": "",
              "typeName": "PostmanCollectionRun",
              "methodName": null,
              "columnNumber": 27,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 1144,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 1018,
              "functionName": "replenish",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "C:\\Users\\I329272\\AppData\\Roaming\\npm\\node_modules\\newman\\node_modules\\postman-runtime\\node_modules\\async\\dist\\async.js",
              "lineNumber": 1022,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "test-script:2:21",
        "source": {
          "id": "3d26e719-2cc3-4634-a785-7214bcd9a7e2",
          "name": "get ProfileFeatures with children and limits verify on channel",
          "request": {
            "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
            "method": "GET",
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "x-csrf-token",
                "value": "{{x-csrf-token}}"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "TokenKey",
                "value": "{{TokenKey}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "description": {
              "content": "",
              "type": "text/plain"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var res = jsonData.d.results;",
                  "var limitArr = [\"50.00\",\"100.00\",\"200.00\",\"400.00\"];",
                  "var maxlimitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                  "for(var i=0;i<res.length;i++)",
                  "{",
                  "    var propArr = res[i].Properties.results;",
                  "    var childArr = res[i].Childrens.results;",
                  "    var parentLimit = res[i].Limits.results;",
                  "    //if(parentLimit.length>0)",
                  "    {",
                  "        for(var k=0;k<parentLimit.length;k++)",
                  "        {",
                  "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is : \"+maxlimitArr[k]] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === maxlimitArr[k];",
                  "        }",
                  "    }",
                  "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                  "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                  "    for(var j=0;j<childArr.length;j++)",
                  "    {",
                  "        var childLimit = childArr[j].Limits.results;",
                  "    //if(childLimit.length>0)",
                  "        {",
                  "        for(var k=0;k<childLimit.length;k++)",
                  "            {",
                  "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is :\"+maxlimitArr[k]] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === maxlimitArr[k];",
                  "            }",
                  "        }",
                  "        var childPropArr = childArr[j].Properties.results;",
                  "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                  "        //if(childPropArr.length>0)",
                  "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                  "    }",
                  "}",
                  "tests[\"check entitlements with limit on channel for \"+environment['featureName']] = responseCode.code === 200;"
                ]
              }
            }
          ]
        },
        "parent": {
          "description": {
            "content": "",
            "type": "text/plain"
          },
          "id": "83980377-4f43-4add-86d9-8fe657ed87f9",
          "name": "CB Feature Template",
          "item": [
            {
              "id": "facca270-9bce-4e09-b05e-1c353e30afee",
              "name": "Login",
              "request": {
                "url": "{{env}}/cb/odata/ns/authenticationservice/SecureUsers?action=init",
                "method": "POST",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\r\n               \"Id\": \"\",\r\n\r\n               \"UserName\": \"primaryadmin\",\r\n\r\n               \"AppType\": \"Business\",\r\n\r\n               \"Password\": \"Pass1234\",\r\n\r\n               \"ChannelType\": \"Web\"\r\n\r\n}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Logged in as primaryadmin for iteration : \"+environment['featureName']] = responseCode.code === 201;",
                      "postman.setEnvironmentVariable(\"TokenKey\",postman.getResponseHeader('TokenKey'));",
                      "postman.setEnvironmentVariable(\"x-csrf-token\",postman.getResponseHeader('x-csrf-token'));"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setEnvironmentVariable('featureId',data['f_id']);",
                      "postman.setEnvironmentVariable('featureName',data['name']);"
                    ]
                  }
                }
              ]
            },
            {
              "id": "9de3b21f-024a-49cc-9839-e5066d111a15",
              "name": "get ProfileFeatures without assigning feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('reqPutOnlyFeature',jsonRequestBody);",
                      "",
                      "tests[\"\"+environment['featureName']+\" get without assigning.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98d5151b-ce91-4438-b2c0-bd1ce79e04aa",
              "name": "Add Business Profile Feature without entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{reqPutOnlyFeature}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//postman.setEnvironmentVariable(\"featureId\", jsonData.d.FeatureId);",
                      "",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"ProfileId and FeatureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === '601';",
                      "tests[\"\"+environment['featureName']+\" added without entitlements.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a08bdd26-855e-4cc6-9855-8348d9f58b26",
              "name": "get ProfileFeatures entitlements",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Childrens,Childrens/Properties",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsList = [];",
                      "var channelEntitlementsList = [];",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    entitlementsList.push(entitlement);",
                      "",
                      "    var channelEntitlement = {};",
                      "    channelEntitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    channelEntitlement.Entitled = false;",
                      "    channelEntitlementsList.push(channelEntitlement);",
                      " ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var channelEntitlement = {};",
                      "        channelEntitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        channelEntitlement.Entitled = false;",
                      "        channelEntitlementsList.push(channelEntitlement);",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "",
                      "postResponse.Feature = entObj;",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "entObjChannel.Entitlements = channelEntitlementsList; ",
                      "",
                      "",
                      "var jsonRequestBodyCross = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReq',jsonRequestBodyCross);",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqChannel',jsonRequestBodyChannel);",
                      "",
                      "tests[\"status code is 200 : OK for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "14162a48-9ac6-4b33-a5d3-ad43a28f7124",
              "name": "delete feature",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "DELETE",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"\"+environment['featureName']+\" deleted.\"] = responseCode.code === 204;",
                      ""
                    ]
                  }
                }
              ]
            },
            {
              "id": "26012c65-7033-47ac-ac7e-2ec7bc52f771",
              "name": "Add Business Profile Features with entitlements (Valid Set)",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReq}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"\"+environment['featureName']+\" added with entitlements entitled true.\"] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "cd9bd5df-8eab-4579-aa7c-daf209871195",
              "name": "get ProfileFeatures with children and limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "var postResponse ={};",
                      "postResponse.ProfileId = \"{{Id}}\";",
                      "postResponse.FeatureId = \"{{featureId}}\";",
                      "",
                      "var postResponseChannel ={};",
                      "postResponseChannel.ProfileId = \"{{ChannelId}}\";",
                      "postResponseChannel.FeatureId = \"{{featureId}}\";",
                      "",
                      "var entObj = {};",
                      "var featureObj = {};",
                      "var entitlementsList = [];",
                      "var entObjChannel = {};",
                      "var featureObjChannel = {};",
                      "var entitlementsListChannel = [];",
                      "",
                      "var limitValue = 1600;",
                      "var limitList = [];",
                      "var limitListChannel = [];",
                      "var periodType = [\"Per Month\",\"Per Week\",\"Per Day\",\"Per Transaction\"];",
                      "",
                      "for(var i=0;i<4;i++)",
                      "{",
                      "    limitValue = limitValue/2;",
                      "    limitValueChannel = limitValue/2;",
                      "    var limitObj = {};",
                      "    limitObj.Period=periodType[i];",
                      "    limitObj.Amount=limitValue.toString()+\".00\";",
                      "    limitObj.ExceedWithApproval=true;",
                      "    limitList.push(limitObj);",
                      "    ",
                      "    var limitObjChannel = {};",
                      "    limitObjChannel.Period=periodType[i];",
                      "    limitObjChannel.Amount=limitValueChannel.toString()+\".00\";",
                      "    limitObjChannel.ExceedWithApproval=true;",
                      "    limitListChannel.push(limitObjChannel);",
                      "}",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var entitlement = {};",
                      "    var limitArr = res[i].Limits.results;",
                      "    entitlement.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlement.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlement.Limits=limitList;",
                      "    }",
                      "    entitlementsList.push(entitlement);",
                      "    ",
                      "    var entitlementChannel = {};",
                      "    entitlementChannel.OperationName = res[i].OperationName;//Parent Operation name tobe extracted",
                      "    entitlementChannel.Entitled = true;",
                      "    if(limitArr.length>0)",
                      "    {",
                      "        entitlementChannel.Limits=limitListChannel;",
                      "    }",
                      "    entitlementsListChannel.push(entitlementChannel);",
                      "    ",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var entitlement = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlement.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlement.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlement.Limits=limitList;",
                      "        }",
                      "        entitlementsList.push(entitlement);",
                      "        ",
                      "        var entitlementChannel = {};",
                      "        var childlimitArr = childArr[j].Limits.results;",
                      "        entitlementChannel.OperationName = childArr[j].OperationName;//Child Operation name tobe extracted for each parent",
                      "        entitlementChannel.Entitled = true;",
                      "        if(childlimitArr.length>0)",
                      "        {",
                      "            entitlementChannel.Limits=limitListChannel;",
                      "        }",
                      "        entitlementsListChannel.push(entitlementChannel);",
                      "        ",
                      "        ",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of \"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "",
                      "entObj.Entitlements = entitlementsList; ",
                      "postResponse.Feature = entObj;",
                      "",
                      "var jsonRequestBody = JSON.stringify(postResponse);",
                      "postman.setEnvironmentVariable('newReqWithLimit',jsonRequestBody);",
                      "",
                      "entObjChannel.Entitlements = entitlementsListChannel; ",
                      "postResponseChannel.Feature = entObjChannel;",
                      "",
                      "var jsonRequestBodyChannel = JSON.stringify(postResponseChannel);",
                      "postman.setEnvironmentVariable('newReqWithLimitChannel',jsonRequestBodyChannel);",
                      "tests[\"\"+environment['featureName']+\" expand limit,properties verified.\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "98f04459-2775-4071-82f1-795c11b47882",
              "name": "Add Business Profile Features with entitlements (Valid Set) copy",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"Change entitlements to entitled false on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "825abed4-1099-4b44-8cf5-da9e59e2d1b6",
              "name": "get ProfileFeatures with children entitled false on channel Verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    ",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled false\"] = res[i].Entitled === false;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "   for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled false\"] = childArr[j].Entitled === false;",
                      "        ",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"Entitlements checked (false) on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "7977a171-5d7d-4234-b83e-2ad5d14b19da",
              "name": "Add Business Profile Features with entitlements with limits",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimit}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "a296d108-e64d-41f4-bdc1-7eb93fd5f8de",
              "name": "get ProfileFeatures with children and limits verify",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is null\"] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === null;",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is null\"] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === null;",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "f453248f-5025-43a1-9f38-90d5ce5460d8",
              "name": "Add Business Profile Features with entitlements with limits on Channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{Id}}',FeatureId='{{featureId}}')",
                "method": "PUT",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{newReqWithLimitChannel}}"
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "//var jsonData = JSON.parse(responseBody);",
                      "//tests[\"status code is 201 : Created\"] = responseCode.code === 201;",
                      "//tests[\"profileId and featureId verified\"] = jsonData.d.ProfileId === environment['Id'] && jsonData.d.FeatureId === environment['featureId'];",
                      "",
                      "tests[\"set limits on channel for \"+environment['featureName']] = responseCode.code === 204;"
                    ]
                  }
                }
              ]
            },
            {
              "id": "3d26e719-2cc3-4634-a785-7214bcd9a7e2",
              "name": "get ProfileFeatures with children and limits verify on channel",
              "request": {
                "url": "{{env}}/cb/odata/services/businessuserprofileservice/ProfileFeatures(ProfileId='{{ChannelId}}',FeatureId='{{featureId}}')/Feature/Entitlements?$expand=Properties,Limits,Childrens,Childrens/Properties,Childrens/Limits",
                "method": "GET",
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "x-csrf-token",
                    "value": "{{x-csrf-token}}"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "TokenKey",
                    "value": "{{TokenKey}}"
                  }
                ],
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "description": {
                  "content": "",
                  "type": "text/plain"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var res = jsonData.d.results;",
                      "var limitArr = [\"50.00\",\"100.00\",\"200.00\",\"400.00\"];",
                      "var maxlimitArr = [\"100.00\",\"200.00\",\"400.00\",\"800.00\"];",
                      "for(var i=0;i<res.length;i++)",
                      "{",
                      "    var propArr = res[i].Properties.results;",
                      "    var childArr = res[i].Childrens.results;",
                      "    var parentLimit = res[i].Limits.results;",
                      "    //if(parentLimit.length>0)",
                      "    {",
                      "        for(var k=0;k<parentLimit.length;k++)",
                      "        {",
                      "            tests[\"Limit for \"+environment['featureId']+\" \"+parentLimit[k].Period+\" is\"+parentLimit[k].Amount+\" and MaxLimitValue is : \"+maxlimitArr[k]] = parentLimit[k].Amount === limitArr[k] && parentLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "        }",
                      "    }",
                      "    tests[\"Feature \"+res[i].OperationName+\" entitled true\"] = res[i].Entitled === true;",
                      "    tests[\"Feature \"+environment['featureId']+\" has \"+propArr[0].Key+\" =\"+propArr[0].Value] = propArr.length>0;",
                      "    for(var j=0;j<childArr.length;j++)",
                      "    {",
                      "        var childLimit = childArr[j].Limits.results;",
                      "    //if(childLimit.length>0)",
                      "        {",
                      "        for(var k=0;k<childLimit.length;k++)",
                      "            {",
                      "            tests[\"Limit for \"+environment['featureId']+\" child \"+childLimit[k].Period+\" is\"+childLimit[k].Amount+\" and MaxLimitValue is :\"+maxlimitArr[k]] = childLimit[k].Amount === limitArr[k] && childLimit[k].MaxLimitValue === maxlimitArr[k];",
                      "            }",
                      "        }",
                      "        var childPropArr = childArr[j].Properties.results;",
                      "        tests[\"Feature \"+childArr[j].OperationName+\" entitled true\"] = childArr[j].Entitled === true;",
                      "        //if(childPropArr.length>0)",
                      "            tests[\"Child Feature of\"+environment['featureId']+\" has \"+childPropArr[0].Key+\" =\"+childPropArr[0].Value] = childPropArr.length>0;",
                      "    }",
                      "}",
                      "tests[\"check entitlements with limit on channel for \"+environment['featureName']] = responseCode.code === 200;"
                    ]
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "0dfb5bfb-e7f3-445e-9636-2e953ad4a3d9",
          "length": 13,
          "cycles": 1,
          "position": 12,
          "iteration": 0
        }
      }
    ],
    "error": null
  }
}